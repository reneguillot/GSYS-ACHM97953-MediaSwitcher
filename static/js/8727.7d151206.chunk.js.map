{"version":3,"file":"static/js/8727.7d151206.chunk.js","mappings":"uTAgBIA,EAAoD,SAAUC,EAAYC,EAAQC,EAAKC,GACzF,IAA2HC,EAAvHC,EAAIC,UAAUC,OAAQC,EAAIH,EAAI,EAAIJ,EAAkB,OAATE,EAAgBA,EAAOM,OAAOC,yBAAyBT,EAAQC,GAAOC,EACrH,GAAuB,kBAAZQ,SAAoD,oBAArBA,QAAQC,SAChDJ,EAAIG,QAAQC,SAASZ,EAAYC,EAAQC,EAAKC,QAE9C,IAAK,IAAIU,EAAIb,EAAWO,OAAS,EAAGM,GAAK,EAAGA,KACtCT,EAAIJ,EAAWa,MACjBL,GAAKH,EAAI,EAAID,EAAEI,GAAKH,EAAI,EAAID,EAAEH,EAAQC,EAAKM,GAAKJ,EAAEH,EAAQC,KAASM,GACzE,OAAOH,EAAI,GAAKG,GAAKC,OAAOK,eAAeb,EAAQC,EAAKM,GAAIA,CAC9D,EACMO,EAAoB,WACxB,SAAAA,EAAYC,IAASC,EAAAA,EAAAA,GAAA,KAAAF,IACnBG,EAAAA,EAAAA,GAAiBC,KAAMH,GACvBG,KAAKC,YAASC,EACdF,KAAKG,mBAAgBD,EACrBF,KAAKI,sBAAwB,QAC7BJ,KAAKK,cAAWH,EAChBF,KAAKM,UAAW,EAChBN,KAAKO,UAAW,EAChBP,KAAKQ,SAAU,CACjB,CAkEuC,OAlEtCC,EAAAA,EAAAA,GAAAb,EAAA,EAAAb,IAAA,aAAA2B,MACD,WACEV,KAAKO,UAAWI,EAAAA,EAAAA,GAAQX,KAAKY,KAAM,SACnCZ,KAAKQ,SAAUG,EAAAA,EAAAA,GAAQX,KAAKY,KAAM,OACpC,GAAC,CAAA7B,IAAA,oBAAA2B,MACD,WACEV,KAAKa,WACLb,KAAKc,WACLd,KAAKO,UAAWI,EAAAA,EAAAA,GAAQX,KAAKY,KAAM,SACnCZ,KAAKQ,SAAUG,EAAAA,EAAAA,GAAQX,KAAKY,KAAM,SAClCG,EAAAA,EAAAA,GAAef,KAAKY,KAAM,CAAEI,QAAShB,KAAKgB,SAC5C,GAAC,CAAAjC,IAAA,mBAAA2B,MACD,WACEV,KAAKiB,aAAajB,KAAKkB,yBAA0BlB,KAAKmB,MAAOnB,KAAKC,OACpE,GAAC,CAAAlB,IAAA,uBAAA2B,MACD,WACMV,KAAKoB,kBACPpB,KAAKoB,iBAAiBC,aAEpBrB,KAAKsB,kBACPtB,KAAKsB,iBAAiBD,YAE1B,GAAC,CAAAtC,IAAA,SAAA2B,MACD,WAAS,IAAAa,EAAAC,EAAA,KACP,OAAQC,EAAAA,EAAAA,GAAEC,EAAAA,EAAuB,CAAEvB,cAAeH,KAAKI,wBAAyBqB,EAAAA,EAAAA,GAAEE,EAAAA,EAAmB,CAAEC,SAAU5B,KAAKI,sBAAuBE,SAAUN,KAAKM,WAAYmB,EAAAA,EAAAA,GAAE,OAAQ,CAAEI,KAAM,QAASC,aAAc,kBAAMN,EAAKV,UAAU,MAAMW,EAAAA,EAAAA,GAAE,MAAO,CAAEM,MAAO,kCAAmCN,EAAAA,EAAAA,GAAE,MAAO,CAAEO,IAAK,SAAAC,GAAE,OAAKT,EAAKN,yBAA2Be,CAAE,EAAGF,OAAKR,EAAA,CAC9V,aAAa,IAAIW,EAAAA,EAAAA,GAAAX,EAAA,cAAAY,OACFnC,KAAKC,SAAW,IAAIiC,EAAAA,EAAAA,GAAAX,EACnC,eAAgBvB,KAAKK,WAAQ6B,EAAAA,EAAAA,GAAAX,EAC7B,kBAAmBvB,KAAKO,UAAQgB,KAC7BE,EAAAA,EAAAA,GAAE,OAAQ,CAAEI,KAAM,YAAaJ,EAAAA,EAAAA,GAAEW,EAAAA,EAAmB,CAAEC,KAAMrC,KAAKO,WAAYkB,EAAAA,EAAAA,GAAE,OAAQ,CAAEI,KAAM,YAAaJ,EAAAA,EAAAA,GAAEa,EAAAA,EAAkB,CAAED,MAAOrC,KAAKO,UAAYP,KAAKQ,UAAWiB,EAAAA,EAAAA,GAAE,OAAQ,CAAEI,KAAM,WACrM,GAAC,CAAA9C,IAAA,UAAAwD,IACD,WACE,IAAMC,EAAuBxC,KAAKG,cAC9BH,KAAKG,cAAcsC,cACnB,OACJ,MAAO,GAAPN,OAAUnC,KAAKC,OAAM,KAAAkC,OAAIK,EAC3B,GAAC,CAAAzD,IAAA,WAAA2B,MACD,WAAW,IAAAgC,EAAA,KACT1C,KAAKmB,MAAQnB,KAAKY,KAAK+B,cAAc,2BACrCC,EAAAA,EAAAA,GAAgC5C,KAAKmB,OACrCnB,KAAKiB,aAAajB,KAAKkB,yBAA0BlB,KAAKmB,MAAOnB,KAAKC,QAClED,KAAKmB,MAAM0B,iBAAiB,SAAS,WACnCH,EAAKzB,aAAayB,EAAKxB,yBAA0BwB,EAAKvB,MAAOuB,EAAKzC,OACpE,IACAD,KAAKK,UAAWyC,EAAAA,EAAAA,GAA4B9C,KAAKmB,OACjDnB,KAAKM,SAAWN,KAAKmB,MAAMb,SAC3BN,KAAKoB,kBAAmB2B,EAAAA,EAAAA,GAA2B/C,KAAKmB,OAAO,SAACd,GAC9DqC,EAAKrC,SAAWA,CAClB,IACAL,KAAKsB,kBAAmB0B,EAAAA,EAAAA,GAAiBhD,KAAKmB,OAAO,SAACb,GACpDoC,EAAKpC,SAAWA,CAClB,KACA2C,EAAAA,EAAAA,GAAgBjD,KAAKY,KAAMZ,KAAKmB,MAClC,GAAC,CAAApC,IAAA,WAAA2B,MACD,WACEV,KAAKkD,MAAQlD,KAAKY,KAAK+B,cAAc,uBACrC3C,KAAKI,uBAAwB+C,EAAAA,EAAAA,GAAyBnD,KAAKkD,MAAOlD,KAAKG,cACzE,GAAC,CAAApB,IAAA,eAAA2B,MACD,SAAa0C,EAAWjC,EAAOlB,GACd,SAAXA,GACEmD,IACFA,EAAUC,QAAQC,gBAAkBnC,EAAMT,MAC1C0C,EAAUG,MAAMC,UAAYrC,EAAMoC,MAAMC,UAG9C,GAAC,CAAAzE,IAAA,OAAAwD,IACD,WAAa,OAAOkB,EAAAA,EAAAA,GAAWzD,KAAO,KAACJ,CAAA,CA5Ef,GA8E1BhB,EAAW,EACT8E,EAAAA,EAAAA,GAAW,CAAEC,WAAW,EAAMC,SAAS,KACtChE,EAAqBiE,UAAW,aAAc,MACjDjE,EAAqB2D,MA7FW,4lG","sources":["../node_modules/genesys-spark-components/dist/esm/gux-form-field-textarea.entry.js"],"sourcesContent":["import { r as registerInstance, h, g as getElement } from './index-816e34d8.js';\nimport { c as calculateInputDisabledState, o as onInputDisabledStateChange } from './on-input-disabled-state-change-3ea76372.js';\nimport { O as OnMutation } from './on-mutation-9b53a0da.js';\nimport { o as onRequiredChange } from './on-attribute-change-5fd8da7c.js';\nimport { p as preventBrowserValidationStyling } from './prevent-browser-validation-styling-d16c3f4c.js';\nimport { h as hasSlot } from './has-slot-062ae63a.js';\nimport { G as GuxFormFieldError, a as GuxFormFieldHelp, v as validateFormIds, b as getComputedLabelPosition } from './gux-form-field.service-57a80f91.js';\nimport { G as GuxFormFieldLabel, a as GuxFormFieldContainer } from './gux-form-field-container-40484056.js';\nimport { t as trackComponent } from './usage-f636627a.js';\nimport './random-html-id-8e3f658c.js';\nimport './log-error-e0bbd04a.js';\nimport './set-input-value-5adeaccc.js';\nimport './simulate-native-event-ac69961f.js';\n\nconst guxFormFieldTextareaCss = \".gux-form-field-container{margin:var(--gux-form-field-container-margin-top, 16px) 0 var(--gux-form-field-container-margin-bottom, 16px) 0}.gux-form-field-container.gux-beside{display:flex;flex-direction:row}.gux-form-field-error{display:none;flex-direction:row;flex-wrap:nowrap;align-content:stretch;align-items:flex-start;justify-content:flex-start;margin:4px 0;font-size:12px;line-height:20px;color:#2e394c}.gux-form-field-error.gux-show{display:flex}.gux-form-field-error gux-icon{flex:0 1 auto;align-self:auto;order:0;min-width:16px;min-height:16px;margin:2px 4px 0 0;color:#ea0b0b}.gux-form-field-error .gux-message{flex:0 1 auto;align-self:auto;order:0}.gux-form-field-label.gux-required::after{font-size:12px;color:#ea0b0b;content:' *'}.gux-form-field-label.gux-beside{position:relative;top:8px;width:fit-content;min-width:45px;margin-right:8px}.gux-form-field-label.gux-above{margin-bottom:8px}.gux-form-field-label.gux-screenreader{position:absolute;top:auto;left:-10000px;width:1px;height:1px;overflow:hidden}.gux-form-field-help{display:none;flex-direction:row;flex-wrap:nowrap;align-content:stretch;align-items:flex-start;justify-content:flex-start;margin:4px 0;font-size:12px;font-weight:400;line-height:20px;color:#6b7585}.gux-form-field-help.gux-show{display:flex}.gux-form-field-help .gux-message{flex:0 1 auto;align-self:none;order:0}:host{display:block;color:#2e394c}::slotted(label){font-family:Roboto, sans-serif;font-weight:400;font-weight:700;font-size:12px;line-height:16px}::slotted(textarea){flex:1 1 auto;align-self:auto;order:0;font-family:inherit;color:#2e394c;resize:vertical;background-color:#f6f7f9;background-image:none;border:none;border-radius:4px;outline:none;box-shadow:inset 0 0 4px rgba(32, 41, 55, 0.16);font-family:Roboto, sans-serif;font-weight:400;font-size:12px;line-height:20px;min-height:90px;padding:4px 12px;margin:0}::slotted(textarea)::placeholder{color:#596373;opacity:1}::slotted(textarea)[disabled]{opacity:0.5}::slotted(textarea)::placeholder{color:#596373;opacity:1}.gux-input-and-error-container{flex-grow:1}.gux-input-and-error-container .gux-input{position:relative;display:flex;border:1px solid #6b7585;border-radius:4px;outline:none}.gux-input-and-error-container .gux-input:focus-within{border-color:#2a60c8;outline:3px solid #aac9ff;outline-offset:1px;box-shadow:0 0 0 1px #fdfdfd}.gux-input-and-error-container .gux-input.gux-input-error{border-color:#ea0b0b}.gux-input-and-error-container .gux-input.gux-disabled{opacity:0.5}.gux-input-and-error-container .gux-input.gux-resize-none ::slotted(textarea){resize:none}.gux-input-and-error-container .gux-input.gux-resize-auto{display:grid;overflow:hidden;word-break:normal;word-break:break-word;overflow-wrap:anywhere}.gux-input-and-error-container .gux-input.gux-resize-auto::after{grid-row-start:1;grid-row-end:2;grid-column-start:1;grid-column-end:2;white-space:pre-wrap;visibility:hidden;content:attr(data-replicated-value) ' ';min-height:90px;padding:4px 12px;margin:0}.gux-input-and-error-container .gux-input.gux-resize-auto ::slotted(textarea){grid-row-start:1;grid-row-end:2;grid-column-start:1;grid-column-end:2;overflow-x:hidden;resize:none}\";\n\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\")\n    r = Reflect.decorate(decorators, target, key, desc);\n  else\n    for (var i = decorators.length - 1; i >= 0; i--)\n      if (d = decorators[i])\n        r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nconst GuxFormFieldTextarea = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.resize = undefined;\n    this.labelPosition = undefined;\n    this.computedLabelPosition = 'above';\n    this.disabled = undefined;\n    this.required = true;\n    this.hasError = false;\n    this.hasHelp = false;\n  }\n  onMutation() {\n    this.hasError = hasSlot(this.root, 'error');\n    this.hasHelp = hasSlot(this.root, 'help');\n  }\n  componentWillLoad() {\n    this.setInput();\n    this.setLabel();\n    this.hasError = hasSlot(this.root, 'error');\n    this.hasHelp = hasSlot(this.root, 'help');\n    trackComponent(this.root, { variant: this.variant });\n  }\n  componentDidLoad() {\n    this.updateHeight(this.textareaContainerElement, this.input, this.resize);\n  }\n  disconnectedCallback() {\n    if (this.disabledObserver) {\n      this.disabledObserver.disconnect();\n    }\n    if (this.requiredObserver) {\n      this.requiredObserver.disconnect();\n    }\n  }\n  render() {\n    return (h(GuxFormFieldContainer, { labelPosition: this.computedLabelPosition }, h(GuxFormFieldLabel, { position: this.computedLabelPosition, required: this.required }, h(\"slot\", { name: \"label\", onSlotchange: () => this.setLabel() })), h(\"div\", { class: \"gux-input-and-error-container\" }, h(\"div\", { ref: el => (this.textareaContainerElement = el), class: {\n        'gux-input': true,\n        [`gux-resize-${this.resize}`]: true,\n        'gux-disabled': this.disabled,\n        'gux-input-error': this.hasError\n      } }, h(\"slot\", { name: \"input\" })), h(GuxFormFieldError, { show: this.hasError }, h(\"slot\", { name: \"error\" })), h(GuxFormFieldHelp, { show: !this.hasError && this.hasHelp }, h(\"slot\", { name: \"help\" })))));\n  }\n  get variant() {\n    const labelPositionVariant = this.labelPosition\n      ? this.labelPosition.toLowerCase()\n      : 'none';\n    return `${this.resize}-${labelPositionVariant}`;\n  }\n  setInput() {\n    this.input = this.root.querySelector('textarea[slot=\"input\"]');\n    preventBrowserValidationStyling(this.input);\n    this.updateHeight(this.textareaContainerElement, this.input, this.resize);\n    this.input.addEventListener('input', () => {\n      this.updateHeight(this.textareaContainerElement, this.input, this.resize);\n    });\n    this.disabled = calculateInputDisabledState(this.input);\n    this.required = this.input.required;\n    this.disabledObserver = onInputDisabledStateChange(this.input, (disabled) => {\n      this.disabled = disabled;\n    });\n    this.requiredObserver = onRequiredChange(this.input, (required) => {\n      this.required = required;\n    });\n    validateFormIds(this.root, this.input);\n  }\n  setLabel() {\n    this.label = this.root.querySelector('label[slot=\"label\"]');\n    this.computedLabelPosition = getComputedLabelPosition(this.label, this.labelPosition);\n  }\n  updateHeight(container, input, resize) {\n    if (resize === 'auto') {\n      if (container) {\n        container.dataset.replicatedValue = input.value;\n        container.style.maxHeight = input.style.maxHeight;\n      }\n    }\n  }\n  get root() { return getElement(this); }\n};\n__decorate([\n  OnMutation({ childList: true, subtree: true })\n], GuxFormFieldTextarea.prototype, \"onMutation\", null);\nGuxFormFieldTextarea.style = guxFormFieldTextareaCss;\n\nexport { GuxFormFieldTextarea as gux_form_field_textarea };\n"],"names":["__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","GuxFormFieldTextarea","hostRef","_classCallCheck","registerInstance","this","resize","undefined","labelPosition","computedLabelPosition","disabled","required","hasError","hasHelp","_createClass","value","hasSlot","root","setInput","setLabel","trackComponent","variant","updateHeight","textareaContainerElement","input","disabledObserver","disconnect","requiredObserver","_class","_this","h","GuxFormFieldContainer","GuxFormFieldLabel","position","name","onSlotchange","class","ref","el","_defineProperty","concat","GuxFormFieldError","show","GuxFormFieldHelp","get","labelPositionVariant","toLowerCase","_this2","querySelector","preventBrowserValidationStyling","addEventListener","calculateInputDisabledState","onInputDisabledStateChange","onRequiredChange","validateFormIds","label","getComputedLabelPosition","container","dataset","replicatedValue","style","maxHeight","getElement","OnMutation","childList","subtree","prototype"],"sourceRoot":""}