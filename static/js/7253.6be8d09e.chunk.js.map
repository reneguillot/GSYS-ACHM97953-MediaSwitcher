{"version":3,"file":"static/js/7253.6be8d09e.chunk.js","mappings":"yNAKMA,EAAiB,wBAIvB,IAAMC,EAAiB,WACrB,SAAAA,EAAYC,IAASC,EAAAA,EAAAA,GAAA,KAAAF,IACnBG,EAAAA,EAAAA,GAAiBC,KAAMH,GACvBG,KAAKC,iBAAkBC,EAAAA,EAAAA,GAAYF,KAAM,kBAAmB,GAC5DA,KAAKG,WAAQC,EACbJ,KAAKK,cAAWD,EAChBJ,KAAKM,cAAWF,EAChBJ,KAAKO,cAAWH,EAChBJ,KAAKQ,UAAOJ,EACZJ,KAAKS,eAAYL,CACnB,CAiEsE,OAhEtEM,EAAAA,EAAAA,GAAAd,EAAA,EAAAe,IAAA,oBAAAR,MAGA,WACE,OAAOS,QAAQC,QAAQb,KAAKQ,KAC9B,GACA,CAAAG,IAAA,eAAAR,MAKA,SAAaW,GAGX,GAFAd,KAAKS,UAAYK,EACjBd,KAAKe,gBAAkB,GAClBD,EACH,OAAOF,QAAQC,SAAQ,GAEzB,IACMG,EADQ,IAAIC,OAAmBH,EA9B1BI,QAAQvB,EAAgB,QA8BgB,MACzBwB,KAAKnB,KAAKQ,MAC9BY,EAAyB,OAAhBJ,EAIf,OAHKI,IACHpB,KAAKe,eAAiBC,EAAYK,OAE7BT,QAAQC,QAAQO,EACzB,GAAC,CAAAT,IAAA,mBAAAR,MACD,WAAmB,IAAAmB,EAAA,KACjBtB,KAAKuB,KAAKC,QAAU,WAClBF,EAAKG,eACP,EACAzB,KAAKuB,KAAKG,UAAY,SAACC,GACrB,OAAQA,EAAEhB,KACR,IAAK,IACL,IAAK,QACHW,EAAKf,UAAW,EAChBe,EAAKrB,gBAAgB2B,KAAKN,EAAKnB,OAGrC,CACF,GAAC,CAAAQ,IAAA,WAAAR,MACD,WACE,MAAO,CACL0B,SAAU,IAEd,GAAC,CAAAlB,IAAA,mBAAAR,MACD,WACE,OAAQ2B,EAAAA,EAAAA,GAAE,MAAO,CAAEC,MAAO,sBAAuBC,MAAOhC,KAAKQ,MAAQR,KAAKiC,qBAC5E,GAAC,CAAAtB,IAAA,qBAAAR,MACD,WACE,IAAKH,KAAKS,YAAcT,KAAKQ,KAC3B,OAAQsB,EAAAA,EAAAA,GAAE,OAAQ,KAAM9B,KAAKQ,MAE/B,GAAIR,KAAKe,eAAiB,EACxB,OAAQe,EAAAA,EAAAA,GAAE,OAAQ,KAAM9B,KAAKQ,MAE/B,IAAM0B,EAAUlC,KAAKQ,KAAK2B,UAAU,EAAGnC,KAAKe,gBACtCqB,EAAkBpC,KAAKQ,KAAK2B,UAAUnC,KAAKe,eAAgBf,KAAKe,eAAiBf,KAAKS,UAAU4B,QAChGC,EAAStC,KAAKQ,KAAK2B,UAAUD,EAAQG,OAASrC,KAAKS,UAAU4B,QACnE,OAAQP,EAAAA,EAAAA,GAAE,OAAQ,KAAMI,GAASJ,EAAAA,EAAAA,GAAE,SAAU,KAAMM,GAAkBE,EACvE,GAAC,CAAA3B,IAAA,gBAAAR,MACD,WACEH,KAAKO,UAAW,EAChBP,KAAKC,gBAAgB2B,KAAK5B,KAAKG,MACjC,GAAC,CAAAQ,IAAA,OAAA4B,IACD,WAAa,OAAOC,EAAAA,EAAAA,GAAWxC,KAAO,GAAC,CAAAW,IAAA,SAAAR,MACvC,WAAW,OAAO2B,EAAAA,EAAAA,GAAEW,EAAAA,EAAMzC,KAAK0C,WAAY1C,KAAK2C,mBAAqB,KAAC/C,CAAA,CA3EjD,GA6EvBA,EAAkBgD,MApFW,qtB","sources":["../node_modules/genesys-spark-components/dist/esm/gux-dropdown-option.entry.js"],"sourcesContent":["import { r as registerInstance, c as createEvent, h, g as getElement, H as Host } from './index-816e34d8.js';\n\nconst guxDropdownOptionCss = \"gux-dropdown-option{position:relative;display:flex;height:var(--option-height);padding:0 16px;line-height:32px;cursor:pointer}gux-dropdown-option div.gux-dropdown-option{position:relative;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}gux-dropdown-option div.gux-dropdown-option .gux-ghost{position:absolute}gux-dropdown-option[filtered]{display:none}gux-dropdown-option[disabled]{pointer-events:none;cursor:default;opacity:0.5}gux-dropdown-option[disabled='false']{pointer-events:auto;cursor:pointer;opacity:1}gux-dropdown-option:not(:disabled)[selected]{color:#2e394c;background:#deeaff}gux-dropdown-option:not(:disabled):hover,gux-dropdown-option:not(:disabled):focus-visible{color:#fdfdfd;background:#2a60c8}\";\n\n// RegExp escape string from http://stackoverflow.com/a/3561711/23528\nconst escapeRegexStr = /[-/\\\\^$*+?.()|[\\]{}]/g;\nfunction escapeRegex(input) {\n  return input.replace(escapeRegexStr, '\\\\$&');\n}\nconst GuxDropdownOption = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.selectedChanged = createEvent(this, \"selectedChanged\", 7);\n    this.value = undefined;\n    this.disabled = undefined;\n    this.filtered = undefined;\n    this.selected = undefined;\n    this.text = undefined;\n    this.highlight = undefined;\n  }\n  /**\n   * Gets the value rendered by the drop down item.\n   */\n  getDisplayedValue() {\n    return Promise.resolve(this.text);\n  }\n  /**\n   * Determines if the search input matches this option.\n   *\n   * @param searchInput The input string being searched for.\n   */\n  shouldFilter(searchInput) {\n    this.highlight = searchInput;\n    this.highlightIndex = -1;\n    if (!searchInput) {\n      return Promise.resolve(false);\n    }\n    const regex = new RegExp(escapeRegex(searchInput), 'gi');\n    const regexResult = regex.exec(this.text);\n    const filter = regexResult === null;\n    if (!filter) {\n      this.highlightIndex = regexResult.index;\n    }\n    return Promise.resolve(filter);\n  }\n  componentDidLoad() {\n    this.root.onclick = () => {\n      this.onItemClicked();\n    };\n    this.root.onkeydown = (e) => {\n      switch (e.key) {\n        case ' ':\n        case 'Enter':\n          this.selected = true;\n          this.selectedChanged.emit(this.value);\n          break;\n      }\n    };\n  }\n  hostData() {\n    return {\n      tabindex: '0'\n    };\n  }\n  __stencil_render() {\n    return (h(\"div\", { class: \"gux-dropdown-option\", title: this.text }, this.textWithHighlights()));\n  }\n  textWithHighlights() {\n    if (!this.highlight || !this.text) {\n      return (h(\"span\", null, this.text));\n    }\n    if (this.highlightIndex < 0) {\n      return (h(\"span\", null, this.text));\n    }\n    const preface = this.text.substring(0, this.highlightIndex);\n    const actualHighlight = this.text.substring(this.highlightIndex, this.highlightIndex + this.highlight.length);\n    const suffix = this.text.substring(preface.length + this.highlight.length);\n    return (h(\"span\", null, preface, h(\"strong\", null, actualHighlight), suffix));\n  }\n  onItemClicked() {\n    this.selected = true;\n    this.selectedChanged.emit(this.value);\n  }\n  get root() { return getElement(this); }\n  render() { return h(Host, this.hostData(), this.__stencil_render()); }\n};\nGuxDropdownOption.style = guxDropdownOptionCss;\n\nexport { GuxDropdownOption as gux_dropdown_option };\n"],"names":["escapeRegexStr","GuxDropdownOption","hostRef","_classCallCheck","registerInstance","this","selectedChanged","createEvent","value","undefined","disabled","filtered","selected","text","highlight","_createClass","key","Promise","resolve","searchInput","highlightIndex","regexResult","RegExp","replace","exec","filter","index","_this","root","onclick","onItemClicked","onkeydown","e","emit","tabindex","h","class","title","textWithHighlights","preface","substring","actualHighlight","length","suffix","get","getElement","Host","hostData","__stencil_render","style"],"sourceRoot":""}