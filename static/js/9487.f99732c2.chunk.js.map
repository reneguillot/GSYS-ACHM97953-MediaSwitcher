{"version":3,"file":"static/js/9487.f99732c2.chunk.js","mappings":"uWAWMA,EAAwB,CAC7BC,KARY,OASZC,WARkB,2BASlBC,MARa,QASbC,SARgB,WAShBC,KARY,OASZC,KARY,OASZC,eARsB,sDAWjBC,EAA2B,oBAAAA,KAAAC,EAAAA,EAAAA,GAAA,KAAAD,EAAA,CAyF9B,OAzF8BE,EAAAA,EAAAA,GAAAF,EAAA,OAAAG,IAAA,cAAAC,MAC/B,SAAmBC,EAAaX,GAC9B,GAAIA,GAAc,GAChB,OAAOY,EAAAA,EAAAA,GAAIC,MAAMb,GAAYc,QAAQC,KAAI,SAAAC,GACvC,IAAMC,EAAaD,EAAQ,EAC3B,MAAO,CACLC,WAAAA,EACAC,QAASC,OAAOF,GAChBG,QAASH,IAAeN,EAE5B,IAEF,GAAIA,GAAe,EAAG,CACpB,IAAMU,GAAgBT,EAAAA,EAAAA,GAAIC,MAAM,GAAGC,QAAQC,KAAI,SAAAC,GAC7C,IAAMC,EAAaD,EAAQ,EAC3B,MAAO,CACLC,WAAAA,EACAC,QAASC,OAAOF,GAChBG,QAASH,IAAeN,EAE5B,IACA,MAAO,GAAPW,QAAAV,EAAAA,EAAAA,GACKS,GAAa,CAChB,CACEJ,WAAY,EACZC,QAAS,MACTE,SAAS,GAEX,CACEH,WAAYjB,EACZkB,QAASC,OAAOnB,GAChBoB,SAAS,IAGf,CACA,GAAIT,EAAcX,EAAa,EAAG,CAChC,IAAMuB,GAAcX,EAAAA,EAAAA,GAAIC,MAAM,GAAGC,QAAQC,KAAI,SAAAC,GAC3C,IAAMC,EAAaD,EAAQhB,EAAa,EACxC,MAAO,CACLiB,WAAAA,EACAC,QAASC,OAAOF,GAChBG,QAASH,IAAeN,EAE5B,IACA,MAAO,CACL,CACEM,WAAY,EACZC,QAAS,IACTE,SAAS,GAEX,CACEH,WAAYjB,EAAa,EACzBkB,QAAS,MACTE,SAAS,IACVE,QAAAV,EAAAA,EAAAA,GACEW,GAEP,CACA,IAAMC,GAAiBZ,EAAAA,EAAAA,GAAIC,MAAM,GAAGC,QAAQC,KAAI,SAAAC,GAC9C,IAAMC,EAAaD,EAAQL,EAAc,EACzC,MAAO,CACLM,WAAAA,EACAC,QAASC,OAAOF,GAChBG,QAASH,IAAeN,EAE5B,IACA,MAAO,CACL,CACEM,WAAY,EACZC,QAAS,IACTE,SAAS,GAEX,CACEH,WAAYN,EAAc,EAC1BO,QAAS,MACTE,SAAS,IACVE,QAAAV,EAAAA,EAAAA,GACEY,GAAc,CACjB,CACEP,WAAYN,EAAc,EAC1BO,QAAS,MACTE,SAAS,GAEX,CACEH,WAAYjB,EACZkB,QAASC,OAAOnB,GAChBoB,SAAS,IAGf,KAACd,CAAA,CAzF8B,GA8F3BmB,EAAoB,WACxB,SAAAA,EAAYC,IAASnB,EAAAA,EAAAA,GAAA,KAAAkB,IACnBE,EAAAA,EAAAA,GAAiBC,KAAMF,GACvBE,KAAKC,2BAA4BC,EAAAA,EAAAA,GAAYF,KAAM,4BAA6B,GAChFA,KAAKjB,iBAAcoB,EACnBH,KAAK5B,gBAAa+B,EAClBH,KAAKI,OAAS,MAChB,CAkEuC,OAlEtCxB,EAAAA,EAAAA,GAAAiB,EAAA,EAAAhB,IAAA,cAAAwB,IACD,WACE,OAAOL,KAAKjB,aAAe,CAC7B,GAAC,CAAAF,IAAA,aAAAwB,IACD,WACE,OAAOL,KAAKjB,aAAeiB,KAAK5B,UAClC,GAAC,CAAAS,IAAA,mBAAAC,MACD,WACEkB,KAAKC,0BAA0BK,KAAK,EACtC,GAAC,CAAAzB,IAAA,sBAAAC,MACD,WACEkB,KAAKC,0BAA0BK,KAAKN,KAAKjB,YAAc,EACzD,GAAC,CAAAF,IAAA,kBAAAC,MACD,WACEkB,KAAKC,0BAA0BK,KAAKN,KAAKjB,YAAc,EACzD,GAAC,CAAAF,IAAA,kBAAAC,MACD,WACEkB,KAAKC,0BAA0BK,KAAKN,KAAK5B,WAC3C,GAAC,CAAAS,IAAA,kBAAAC,MACD,SAAgBO,GACdW,KAAKC,0BAA0BK,KAAKjB,EACtC,GAAC,CAAAR,IAAA,mBAAAC,MACD,SAAiBA,GACf,IAAMX,EAAOoC,SAASzB,EAAO,KACxBX,GAAQqC,MAAMrC,GACjB6B,KAAKS,aAAa3B,MAAQS,OAAOS,KAAKjB,aAGtCiB,KAAKC,0BAA0BK,KAAKnC,EAExC,GAAC,CAAAU,IAAA,sBAAAC,MACD,SAAoBC,EAAaX,GAAY,IAAAsC,EAAA,KAC3C,OAAOhC,EAA4BiC,YAAY5B,EAAaX,GAAYwC,QAAO,SAACC,EAAKC,GACnF,OAAIA,EAAGtB,QACEqB,EAAInB,QAAQqB,EAAAA,EAAAA,GAAE,SAAU,CAAEC,MAAO,kDAAoDF,EAAGxB,UAE1FuB,EAAInB,QAAQqB,EAAAA,EAAAA,GAAE,SAAU,CAAEC,MAAO,gDAAiDC,QAAS,kBAAMP,EAAKQ,gBAAgBJ,EAAGzB,WAAW,GAAIyB,EAAGxB,SACpJ,GAAG,GACL,GAAC,CAAAT,IAAA,qBAAAC,MACD,WACE,OAAQiC,EAAAA,EAAAA,GAAE,MAAO,CAAEC,MAAO,iCAC5B,GAAC,CAAAnC,IAAA,wBAAAC,MACD,WACE,OAAQiC,EAAAA,EAAAA,GAAE,MAAO,CAAEC,MAAO,yCAA2ChB,KAAKmB,oBAAoBnB,KAAKjB,YAAaiB,KAAK5B,YACvH,GAAC,CAAAS,IAAA,oBAAAC,MACD,WAAoB,IAAAsC,EAAA,KAClB,OAAQL,EAAAA,EAAAA,GAAE,MAAO,CAAEC,MAAO,2CAA4CD,EAAAA,EAAAA,GAAE,MAAO,KAAMf,KAAKqB,KAAK,UAAUN,EAAAA,EAAAA,GAAE,MAAO,CAAEC,MAAO,iCAAkCD,EAAAA,EAAAA,GAAE,2BAA4B,CAAE,iBAAkB,iBAAkBA,EAAAA,EAAAA,GAAE,QAAS,CAAEO,KAAM,SAAWtB,KAAKqB,KAAK,iBAAkB,CACzRtC,YAAaiB,KAAKjB,YAClBX,WAAY4B,KAAK5B,eACd2C,EAAAA,EAAAA,GAAE,QAAS,CAAEQ,KAAM,OAAQD,KAAM,QAASxC,MAAOS,OAAOS,KAAKjB,aAAcyC,IAAK,SAAAA,GAAG,OAAKJ,EAAKX,aAAee,CAAG,EAAGC,SAAU,kBAAML,EAAKM,iBAAiBN,EAAKX,aAAa3B,MAAM,OAAOiC,EAAAA,EAAAA,GAAE,MAAO,KAAMf,KAAKqB,KAAK,aAAc,CAAEjD,WAAY4B,KAAK5B,cACxP,GAAC,CAAAS,IAAA,gBAAAC,MACD,SAAcsB,GACZ,MAAe,UAAXA,EACKJ,KAAK2B,qBAEC,aAAXvB,EACKJ,KAAK4B,wBAEP5B,KAAK6B,mBACd,GAAC,CAAAhD,IAAA,oBAAAC,MAAA,eAAAgD,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MACD,SAAAC,IAAA,OAAAF,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAA7D,MAAA,cAAA6D,EAAA7D,KAAA,GACoB+D,EAAAA,EAAAA,GAAsBtC,KAAKuC,KAAMrE,GAAsB,OAAzE8B,KAAKqB,KAAIe,EAAAI,KAAA,wBAAAJ,EAAAK,OAAA,GAAAP,EAAA,UACV,yBAAAJ,EAAAY,MAAA,KAAAC,UAAA,EAHA,IAGA,CAAA9D,IAAA,SAAAC,MACD,WACE,OAAQiC,EAAAA,EAAAA,GAAE,MAAO,CAAEC,MAAO,wCAAFtB,OAA0CM,KAAKI,UAAYW,EAAAA,EAAAA,GAAE,MAAO,CAAEC,MAAO,iCAAkCD,EAAAA,EAAAA,GAAE,uBAAwB,CAAE6B,OAAQ,cAAe7B,EAAAA,EAAAA,GAAE,SAAU,CAAE8B,MAAO7C,KAAKqB,KAAK,SAAUyB,SAAU9C,KAAK+C,YAAa9B,QAASjB,KAAKgD,iBAAiBC,KAAKjD,QAASe,EAAAA,EAAAA,GAAE,WAAY,CAAEmC,YAAY,EAAM,YAAa,2BAA4BnC,EAAAA,EAAAA,GAAE,uBAAwB,CAAE6B,OAAQ,cAAe7B,EAAAA,EAAAA,GAAE,SAAU,CAAE8B,MAAO7C,KAAKqB,KAAK,YAAayB,SAAU9C,KAAK+C,YAAa9B,QAASjB,KAAKmD,oBAAoBF,KAAKjD,QAASe,EAAAA,EAAAA,GAAE,WAAY,CAAEmC,YAAY,EAAM,YAAa,0BAA4BlD,KAAKoD,cAAcpD,KAAKI,SAASW,EAAAA,EAAAA,GAAE,MAAO,CAAEC,MAAO,iCAAkCD,EAAAA,EAAAA,GAAE,uBAAwB,CAAE6B,OAAQ,cAAe7B,EAAAA,EAAAA,GAAE,SAAU,CAAE8B,MAAO7C,KAAKqB,KAAK,QAASyB,SAAU9C,KAAKqD,WAAYpC,QAASjB,KAAKsD,gBAAgBL,KAAKjD,QAASe,EAAAA,EAAAA,GAAE,WAAY,CAAEmC,YAAY,EAAM,YAAa,2BAA4BnC,EAAAA,EAAAA,GAAE,uBAAwB,CAAE6B,OAAQ,cAAe7B,EAAAA,EAAAA,GAAE,SAAU,CAAE8B,MAAO7C,KAAKqB,KAAK,QAASyB,SAAU9C,KAAKqD,WAAYpC,QAASjB,KAAKuD,gBAAgBN,KAAKjD,QAASe,EAAAA,EAAAA,GAAE,WAAY,CAAEmC,YAAY,EAAM,YAAa,4BACloC,GAAC,CAAArE,IAAA,OAAAwB,IACD,WAAa,OAAOmD,EAAAA,EAAAA,GAAWxD,KAAO,KAACH,CAAA,CAzEf,GA2E1BA,EAAqB4D,MA7EW,84EA+EhC,IAEMC,EAAwB,CAC7BC,iBAHwB,2CAIxBC,WAHkB,4BAQbC,EAAuB,WAC3B,SAAAA,EAAY/D,IAASnB,EAAAA,EAAAA,GAAA,KAAAkF,IACnB9D,EAAAA,EAAAA,GAAiBC,KAAMF,GACvBE,KAAK4D,WAAa,EAClB5D,KAAKjB,YAAc,EACnBiB,KAAK8D,aAAe,EACtB,CAsBuC,OAtBtClF,EAAAA,EAAAA,GAAAiF,EAAA,EAAAhF,IAAA,YAAAwB,IACD,WACE,OAAIL,KAAK4D,WAAa,EACb,GAED5D,KAAKjB,YAAc,GAAKiB,KAAK8D,aAAe,CACtD,GAAC,CAAAjF,IAAA,WAAAwB,IACD,WACE,OAAIL,KAAK4D,WAAa,EACb,EAEFG,KAAKC,IAAIhE,KAAKjB,YAAciB,KAAK8D,aAAc9D,KAAK4D,WAC7D,GAAC,CAAA/E,IAAA,oBAAAC,MAAA,eAAAmF,GAAAlC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MACD,SAAAiC,IAAA,OAAAlC,EAAAA,EAAAA,KAAAG,MAAA,SAAAgC,GAAA,cAAAA,EAAA9B,KAAA8B,EAAA5F,MAAA,cAAA4F,EAAA5F,KAAA,GACoB+D,EAAAA,EAAAA,GAAsBtC,KAAKuC,KAAMmB,GAAsB,OAAzE1D,KAAKqB,KAAI8C,EAAA3B,KAAA,wBAAA2B,EAAA1B,OAAA,GAAAyB,EAAA,UACV,yBAAAD,EAAAvB,MAAA,KAAAC,UAAA,EAHA,IAGA,CAAA9D,IAAA,SAAAC,MACD,WACE,OAAQiC,EAAAA,EAAAA,GAAE,MAAO,CAAEC,MAAO,yCAA0CD,EAAAA,EAAAA,GAAE,OAAQ,CAAEC,MAAO,oCAAsChB,KAAKqB,KAAK,mBAAoB,CACzJ+C,UAAWpE,KAAKoE,UAChBC,SAAUrE,KAAKqE,aACZtD,EAAAA,EAAAA,GAAE,OAAQ,KAAMf,KAAKqB,KAAK,aAAc,CAAEuC,WAAY5D,KAAK4D,cAClE,GAAC,CAAA/E,IAAA,OAAAwB,IACD,WAAa,OAAOmD,EAAAA,EAAAA,GAAWxD,KAAO,KAAC6D,CAAA,CA5BZ,GA8B7BA,EAAwBJ,MAhCW,oPAkCnC,IAGMa,EAAsB,CAC3BC,QAJe,WAKfT,aAJoB,iBAKpBU,cAJqB,6CAShBC,EAAyB,WAC7B,SAAAA,EAAY3E,IAASnB,EAAAA,EAAAA,GAAA,KAAA8F,IACnB1E,EAAAA,EAAAA,GAAiBC,KAAMF,GACvBE,KAAK0E,4BAA6BxE,EAAAA,EAAAA,GAAYF,KAAM,6BAA8B,GAClFA,KAAK8D,aAAe,EACtB,CAiBuC,OAjBtClF,EAAAA,EAAAA,GAAA6F,EAAA,EAAA5F,IAAA,eAAAC,MACD,SAAa6F,GACXA,EAAMC,kBACN,IAAMC,EAAuBtE,SAASP,KAAK8E,gBAAgBhG,MAAO,IAClEkB,KAAK0E,2BAA2BpE,KAAKuE,EACvC,GAAC,CAAAhG,IAAA,oBAAAC,MAAA,eAAAiG,GAAAhD,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MACD,SAAA+C,IAAA,OAAAhD,EAAAA,EAAAA,KAAAG,MAAA,SAAA8C,GAAA,cAAAA,EAAA5C,KAAA4C,EAAA1G,MAAA,cAAA0G,EAAA1G,KAAA,GACoB+D,EAAAA,EAAAA,GAAsBtC,KAAKuC,KAAM+B,GAAoB,OAAvEtE,KAAKqB,KAAI4D,EAAAzC,KAAA,wBAAAyC,EAAAxC,OAAA,GAAAuC,EAAA,UACV,yBAAAD,EAAArC,MAAA,KAAAC,UAAA,EAHA,IAGA,CAAA9D,IAAA,cAAAC,MACD,WAAc,IAAAoG,EAAA,KACZ,OAAQnE,EAAAA,EAAAA,GAAE,eAAgB,CAAES,IAAK,SAAA2D,GAAE,OAAKD,EAAKJ,gBAAkBK,CAAE,EAAGrG,MAAO,GAAFY,OAAKM,KAAK8D,cAAgB,aAAc9D,KAAKqB,KAAK,gBAAiB,CACxI+D,MAAOpF,KAAK8D,iBACR/C,EAAAA,EAAAA,GAAE,cAAe,CAAE,aAAcf,KAAKqB,KAAK,kBAAmBN,EAAAA,EAAAA,GAAE,aAAc,CAAEjC,MAAO,MAAQ,OAAOiC,EAAAA,EAAAA,GAAE,aAAc,CAAEjC,MAAO,MAAQ,OAAOiC,EAAAA,EAAAA,GAAE,aAAc,CAAEjC,MAAO,MAAQ,OAAOiC,EAAAA,EAAAA,GAAE,aAAc,CAAEjC,MAAO,OAAS,QAClO,GAAC,CAAAD,IAAA,SAAAC,MACD,WACE,OAAQiC,EAAAA,EAAAA,GAAE,MAAO,CAAEC,MAAO,4CAA6CD,EAAAA,EAAAA,GAAE,MAAO,CAAEC,MAAO,wCAA0ChB,KAAKqF,gBAAgBtE,EAAAA,EAAAA,GAAE,MAAO,KAAMf,KAAKqB,KAAK,YACnL,GAAC,CAAAxC,IAAA,OAAAwB,IACD,WAAa,OAAOmD,EAAAA,EAAAA,GAAWxD,KAAO,KAACyE,CAAA,CAtBV,GAwB/BA,EAA0BhB,MA1BW,qoB","sources":["../node_modules/genesys-spark-components/dist/esm/gux-pagination-buttons_3.entry.js"],"sourcesContent":["import { r as registerInstance, c as createEvent, h, g as getElement } from './index-816e34d8.js';\nimport { b as buildI18nForComponent } from './index-992b023e.js';\nimport './get-closest-element-1597503c.js';\n\nconst page = \"Page\";\nconst totalPages = \" of {totalPages, number}\";\nconst first = \"First\";\nconst previous = \"Previous\";\nconst next = \"Next\";\nconst last = \"Last\";\nconst pageInputLabel = \"Page {currentPage, number} of {totalPages, number}\";\nconst paginationResources$2 = {\n\tpage: page,\n\ttotalPages: totalPages,\n\tfirst: first,\n\tprevious: previous,\n\tnext: next,\n\tlast: last,\n\tpageInputLabel: pageInputLabel\n};\n\nclass GuxPaginationButtonsService {\n  static getPageList(currentPage, totalPages) {\n    if (totalPages <= 10) {\n      return [...Array(totalPages).keys()].map(index => {\n        const pageNumber = index + 1;\n        return {\n          pageNumber,\n          display: String(pageNumber),\n          current: pageNumber === currentPage\n        };\n      });\n    }\n    if (currentPage <= 5) {\n      const startPageList = [...Array(6).keys()].map(index => {\n        const pageNumber = index + 1;\n        return {\n          pageNumber,\n          display: String(pageNumber),\n          current: pageNumber === currentPage\n        };\n      });\n      return [\n        ...startPageList,\n        {\n          pageNumber: 7,\n          display: '...',\n          current: false\n        },\n        {\n          pageNumber: totalPages,\n          display: String(totalPages),\n          current: false\n        }\n      ];\n    }\n    if (currentPage > totalPages - 5) {\n      const endPageList = [...Array(6).keys()].map(index => {\n        const pageNumber = index + totalPages - 5;\n        return {\n          pageNumber,\n          display: String(pageNumber),\n          current: pageNumber === currentPage\n        };\n      });\n      return [\n        {\n          pageNumber: 1,\n          display: '1',\n          current: false\n        },\n        {\n          pageNumber: totalPages - 6,\n          display: '...',\n          current: false\n        },\n        ...endPageList\n      ];\n    }\n    const middlePageList = [...Array(5).keys()].map(index => {\n      const pageNumber = index + currentPage - 2;\n      return {\n        pageNumber,\n        display: String(pageNumber),\n        current: pageNumber === currentPage\n      };\n    });\n    return [\n      {\n        pageNumber: 1,\n        display: '1',\n        current: false\n      },\n      {\n        pageNumber: currentPage - 3,\n        display: '...',\n        current: false\n      },\n      ...middlePageList,\n      {\n        pageNumber: currentPage + 3,\n        display: '...',\n        current: false\n      },\n      {\n        pageNumber: totalPages,\n        display: String(totalPages),\n        current: false\n      }\n    ];\n  }\n}\n\nconst guxPaginationButtonsCss = \"gux-pagination-buttons{color:#2e394c}gux-pagination-buttons .gux-pagination-buttons-container{display:flex;flex-direction:row;flex-wrap:nowrap;align-content:stretch;align-items:center;justify-content:flex-end}gux-pagination-buttons .gux-pagination-buttons-container.gux-expanded{justify-content:center}gux-pagination-buttons .gux-pagination-buttons-container>div{flex:0 1 auto;align-self:auto;order:0}gux-pagination-buttons .gux-pagination-buttons-container .gux-pagination-buttons-group{white-space:nowrap}gux-pagination-buttons .gux-pagination-buttons-container .gux-pagination-buttons-group gux-button-slot-beta:not(:first-of-type){margin-left:4px}gux-pagination-buttons .gux-pagination-buttons-container .gux-pagination-buttons-input-container{display:flex;flex-direction:row;flex-wrap:nowrap;align-content:stretch;align-items:center;justify-content:center;margin:0 16px}gux-pagination-buttons .gux-pagination-buttons-container .gux-pagination-buttons-input-container>div{flex:0 1 auto;align-self:auto;order:0;white-space:nowrap}gux-pagination-buttons .gux-pagination-buttons-container .gux-pagination-buttons-input-container .gux-pagination-buttons-input{width:60px;margin:0 8px}gux-pagination-buttons .gux-pagination-buttons-container .gux-pagination-buttons-input-container .gux-pagination-buttons-input input{width:inherit;text-align:center}gux-pagination-buttons .gux-pagination-buttons-container .gux-pagination-buttons-list-container{display:flex;flex-direction:row;flex-wrap:nowrap;align-content:stretch;align-items:center;justify-content:center;margin:0 16px}gux-pagination-buttons .gux-pagination-buttons-container .gux-pagination-buttons-list-container .gux-pagination-buttons-list-button{height:32px;padding:0 4px;margin:0 4px;background:inherit;border:none;border-radius:2px}gux-pagination-buttons .gux-pagination-buttons-container .gux-pagination-buttons-list-container .gux-pagination-buttons-list-button:focus-visible{outline:3px solid #aac9ff;outline-offset:1px;box-shadow:0 0 0 1px #fdfdfd}gux-pagination-buttons .gux-pagination-buttons-container .gux-pagination-buttons-list-container .gux-pagination-buttons-list-button.gux-current{font-weight:600}gux-pagination-buttons .gux-pagination-buttons-container .gux-pagination-buttons-list-container .gux-pagination-buttons-list-button.gux-target{color:#2a60c8;cursor:pointer}gux-pagination-buttons .gux-pagination-buttons-container .gux-pagination-buttons-spacer{width:12px}\";\n\nconst GuxPaginationButtons = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.internalcurrentpagechange = createEvent(this, \"internalcurrentpagechange\", 3);\n    this.currentPage = undefined;\n    this.totalPages = undefined;\n    this.layout = 'full';\n  }\n  get onFirstPage() {\n    return this.currentPage <= 1;\n  }\n  get onLastPage() {\n    return this.currentPage >= this.totalPages;\n  }\n  handleClickFirst() {\n    this.internalcurrentpagechange.emit(1);\n  }\n  handleClickPrevious() {\n    this.internalcurrentpagechange.emit(this.currentPage - 1);\n  }\n  handleClickNext() {\n    this.internalcurrentpagechange.emit(this.currentPage + 1);\n  }\n  handleClickLast() {\n    this.internalcurrentpagechange.emit(this.totalPages);\n  }\n  handleClickPage(pageNumber) {\n    this.internalcurrentpagechange.emit(pageNumber);\n  }\n  setPageFromInput(value) {\n    const page = parseInt(value, 10);\n    if (!page || isNaN(page)) {\n      this.textFieldRef.value = String(this.currentPage);\n    }\n    else {\n      this.internalcurrentpagechange.emit(page);\n    }\n  }\n  getPageListEnteries(currentPage, totalPages) {\n    return GuxPaginationButtonsService.getPageList(currentPage, totalPages).reduce((acc, cv) => {\n      if (cv.current) {\n        return acc.concat((h(\"button\", { class: \"gux-pagination-buttons-list-button gux-current\" }, cv.display)));\n      }\n      return acc.concat((h(\"button\", { class: \"gux-pagination-buttons-list-button gux-target\", onClick: () => this.handleClickPage(cv.pageNumber) }, cv.display)));\n    }, []);\n  }\n  getSmallPagePicker() {\n    return (h(\"div\", { class: 'gux-pagination-buttons-spacer' }));\n  }\n  getExpandedPagePicker() {\n    return (h(\"div\", { class: \"gux-pagination-buttons-list-container\" }, this.getPageListEnteries(this.currentPage, this.totalPages)));\n  }\n  getFullPagePicker() {\n    return (h(\"div\", { class: \"gux-pagination-buttons-input-container\" }, h(\"div\", null, this.i18n('page')), h(\"div\", { class: \"gux-pagination-buttons-input\" }, h(\"gux-form-field-text-like\", { \"label-position\": \"screenreader\" }, h(\"label\", { slot: \"label\" }, this.i18n('pageInputLabel', {\n      currentPage: this.currentPage,\n      totalPages: this.totalPages\n    })), h(\"input\", { type: \"text\", slot: \"input\", value: String(this.currentPage), ref: ref => (this.textFieldRef = ref), onChange: () => this.setPageFromInput(this.textFieldRef.value) }))), h(\"div\", null, this.i18n('totalPages', { totalPages: this.totalPages }))));\n  }\n  getPagePicker(layout) {\n    if (layout === 'small') {\n      return this.getSmallPagePicker();\n    }\n    if (layout === 'expanded') {\n      return this.getExpandedPagePicker();\n    }\n    return this.getFullPagePicker();\n  }\n  async componentWillLoad() {\n    this.i18n = await buildI18nForComponent(this.root, paginationResources$2);\n  }\n  render() {\n    return (h(\"div\", { class: `gux-pagination-buttons-container gux-${this.layout}` }, h(\"div\", { class: \"gux-pagination-buttons-group\" }, h(\"gux-button-slot-beta\", { accent: \"secondary\" }, h(\"button\", { title: this.i18n('first'), disabled: this.onFirstPage, onClick: this.handleClickFirst.bind(this) }, h(\"gux-icon\", { decorative: true, \"icon-name\": \"chevron-double-left\" }))), h(\"gux-button-slot-beta\", { accent: \"secondary\" }, h(\"button\", { title: this.i18n('previous'), disabled: this.onFirstPage, onClick: this.handleClickPrevious.bind(this) }, h(\"gux-icon\", { decorative: true, \"icon-name\": \"chevron-small-left\" })))), this.getPagePicker(this.layout), h(\"div\", { class: \"gux-pagination-buttons-group\" }, h(\"gux-button-slot-beta\", { accent: \"secondary\" }, h(\"button\", { title: this.i18n('next'), disabled: this.onLastPage, onClick: this.handleClickNext.bind(this) }, h(\"gux-icon\", { decorative: true, \"icon-name\": \"chevron-small-right\" }))), h(\"gux-button-slot-beta\", { accent: \"secondary\" }, h(\"button\", { title: this.i18n('last'), disabled: this.onLastPage, onClick: this.handleClickLast.bind(this) }, h(\"gux-icon\", { decorative: true, \"icon-name\": \"chevron-double-right\" }))))));\n  }\n  get root() { return getElement(this); }\n};\nGuxPaginationButtons.style = guxPaginationButtonsCss;\n\nconst itemCountDisplay = \"{firstItem, number} - {lastItem, number}\";\nconst totalItems = \" of {totalItems, number}\";\nconst paginationResources$1 = {\n\titemCountDisplay: itemCountDisplay,\n\ttotalItems: totalItems\n};\n\nconst guxPaginationItemCountsCss = \"gux-pagination-item-counts{color:#2e394c}gux-pagination-item-counts .gux-pagination-item-counts-container{white-space:nowrap}gux-pagination-item-counts .gux-pagination-item-counts-container .gux-pagination-item-counts-range{font-weight:bold}\";\n\nconst GuxPaginationItemCounts = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.totalItems = 0;\n    this.currentPage = 0;\n    this.itemsPerPage = 25;\n  }\n  get firstItem() {\n    if (this.totalItems < 1) {\n      return 0;\n    }\n    return (this.currentPage - 1) * this.itemsPerPage + 1;\n  }\n  get lastItem() {\n    if (this.totalItems < 1) {\n      return 0;\n    }\n    return Math.min(this.currentPage * this.itemsPerPage, this.totalItems);\n  }\n  async componentWillLoad() {\n    this.i18n = await buildI18nForComponent(this.root, paginationResources$1);\n  }\n  render() {\n    return (h(\"div\", { class: \"gux-pagination-item-counts-container\" }, h(\"span\", { class: \"gux-pagination-item-counts-range\" }, this.i18n('itemCountDisplay', {\n      firstItem: this.firstItem,\n      lastItem: this.lastItem\n    })), h(\"span\", null, this.i18n('totalItems', { totalItems: this.totalItems }))));\n  }\n  get root() { return getElement(this); }\n};\nGuxPaginationItemCounts.style = guxPaginationItemCountsCss;\n\nconst perPage = \"per page\";\nconst itemsPerPage = \"Items per page\";\nconst rangeSelected = \"Items per page dropdown, {range} selected\";\nconst paginationResources = {\n\tperPage: perPage,\n\titemsPerPage: itemsPerPage,\n\trangeSelected: rangeSelected\n};\n\nconst guxPaginationItemsPerPageCss = \"gux-pagination-items-per-page{color:#2e394c}gux-pagination-items-per-page .gux-pagination-items-per-page-container{display:flex;flex-direction:row;flex-wrap:nowrap;align-content:stretch;align-items:center;justify-content:center}gux-pagination-items-per-page .gux-pagination-items-per-page-container>div{flex:0 1 auto;align-self:auto;order:0;white-space:nowrap}gux-pagination-items-per-page .gux-pagination-items-per-page-container .gux-pagination-items-per-page-picker{margin:0 8px 0 16px}gux-pagination-items-per-page .gux-pagination-items-per-page-container .gux-pagination-items-per-page-picker gux-dropdown{display:inline-block;width:64px}\";\n\nconst GuxPaginationItemsPerPage = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.internalitemsperpagechange = createEvent(this, \"internalitemsperpagechange\", 3);\n    this.itemsPerPage = 25;\n  }\n  handleChange(event) {\n    event.stopPropagation();\n    const newItemsPerPageValue = parseInt(this.dropdownElement.value, 10);\n    this.internalitemsperpagechange.emit(newItemsPerPageValue);\n  }\n  async componentWillLoad() {\n    this.i18n = await buildI18nForComponent(this.root, paginationResources);\n  }\n  getDropdown() {\n    return (h(\"gux-dropdown\", { ref: el => (this.dropdownElement = el), value: `${this.itemsPerPage}`, \"aria-label\": this.i18n('rangeSelected', {\n        range: this.itemsPerPage\n      }) }, h(\"gux-listbox\", { \"aria-label\": this.i18n('itemsPerPage') }, h(\"gux-option\", { value: \"25\" }, \"25\"), h(\"gux-option\", { value: \"50\" }, \"50\"), h(\"gux-option\", { value: \"75\" }, \"75\"), h(\"gux-option\", { value: \"100\" }, \"100\"))));\n  }\n  render() {\n    return (h(\"div\", { class: \"gux-pagination-items-per-page-container\" }, h(\"div\", { class: \"gux-pagination-items-per-page-picker\" }, this.getDropdown()), h(\"div\", null, this.i18n('perPage'))));\n  }\n  get root() { return getElement(this); }\n};\nGuxPaginationItemsPerPage.style = guxPaginationItemsPerPageCss;\n\nexport { GuxPaginationButtons as gux_pagination_buttons, GuxPaginationItemCounts as gux_pagination_item_counts, GuxPaginationItemsPerPage as gux_pagination_items_per_page };\n"],"names":["paginationResources$2","page","totalPages","first","previous","next","last","pageInputLabel","GuxPaginationButtonsService","_classCallCheck","_createClass","key","value","currentPage","_toConsumableArray","Array","keys","map","index","pageNumber","display","String","current","startPageList","concat","endPageList","middlePageList","GuxPaginationButtons","hostRef","registerInstance","this","internalcurrentpagechange","createEvent","undefined","layout","get","emit","parseInt","isNaN","textFieldRef","_this","getPageList","reduce","acc","cv","h","class","onClick","handleClickPage","getPageListEnteries","_this2","i18n","slot","type","ref","onChange","setPageFromInput","getSmallPagePicker","getExpandedPagePicker","getFullPagePicker","_componentWillLoad","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","buildI18nForComponent","root","sent","stop","apply","arguments","accent","title","disabled","onFirstPage","handleClickFirst","bind","decorative","handleClickPrevious","getPagePicker","onLastPage","handleClickNext","handleClickLast","getElement","style","paginationResources$1","itemCountDisplay","totalItems","GuxPaginationItemCounts","itemsPerPage","Math","min","_componentWillLoad2","_callee2","_context2","firstItem","lastItem","paginationResources","perPage","rangeSelected","GuxPaginationItemsPerPage","internalitemsperpagechange","event","stopPropagation","newItemsPerPageValue","dropdownElement","_componentWillLoad3","_callee3","_context3","_this3","el","range","getDropdown"],"sourceRoot":""}