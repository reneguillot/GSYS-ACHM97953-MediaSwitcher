{"version":3,"file":"static/js/742.9aa4d3e1.chunk.js","mappings":"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","sources":["../node_modules/genesys-spark-components/dist/esm/after-next-render-ed0f7dcd.js","../node_modules/genesys-spark-components/dist/esm/gux-tooltip-title.entry.js","../node_modules/genesys-spark-components/dist/esm/log-error-e0bbd04a.js","../node_modules/genesys-spark-components/dist/esm/on-mutation-9b53a0da.js"],"sourcesContent":["function afterNextRender(callback) {\n  requestAnimationFrame(() => requestAnimationFrame(callback));\n}\nfunction afterNextRenderTimeout(callback, delay = 100) {\n  return setTimeout(callback, delay);\n}\n\nexport { afterNextRenderTimeout as a, afterNextRender as b };\n","import { r as registerInstance, h, g as getElement } from './index-816e34d8.js';\nimport { a as logWarn } from './log-error-e0bbd04a.js';\nimport { O as OnMutation } from './on-mutation-9b53a0da.js';\nimport { a as afterNextRenderTimeout } from './after-next-render-ed0f7dcd.js';\n\nconst guxTooltipTitleCss = \"gux-tooltip-title{overflow:hidden}gux-tooltip{font-weight:normal;line-height:normal;text-align:left;overflow-wrap:break-word;white-space:normal}.gux-overflow-hidden .gux-title-container ::slotted(span){overflow:hidden;text-overflow:ellipsis}.gux-overflow-hidden .gux-title-container>*{overflow:hidden;text-overflow:ellipsis}.gux-title-container{display:flex;pointer-events:none}.gux-tooltip-icon-decorative .gux-title-container{position:relative;margin-left:calc(16px + 4px)}.gux-tooltip-icon-decorative .gux-title-container gux-icon,.gux-tooltip-icon-decorative .gux-title-container ::slotted(gux-icon){position:absolute;left:calc(-16px - 4px);flex-shrink:0;width:16px}\";\n\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\")\n    r = Reflect.decorate(decorators, target, key, desc);\n  else\n    for (var i = decorators.length - 1; i >= 0; i--)\n      if (d = decorators[i])\n        r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nconst GuxTooltipTitle = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.hasTooltip = false;\n    this.showTooltip = false;\n    this.iconOnly = false;\n    this.titleName = '';\n  }\n  onmouseenter(event) {\n    if (!event.buttons) {\n      this.showTooltip = true;\n    }\n  }\n  onmouseleave() {\n    this.showTooltip = false;\n  }\n  onmousedown() {\n    this.showTooltip = false;\n  }\n  async setShowTooltip() {\n    if (this.tooltipElement) {\n      this.showTooltip = true;\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n      await this.tooltipElement.showTooltip();\n    }\n  }\n  async setHideTooltip() {\n    if (this.tooltipElement) {\n      this.showTooltip = false;\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n      await this.tooltipElement.hideTooltip();\n    }\n  }\n  onMutation() {\n    this.titleName = this.setTooltipTitleText();\n    this.checkForTooltipHideOrShow();\n    // Handle checking if the tooltip should hide/show for dynamic content\n    afterNextRenderTimeout(() => {\n      this.checkForTooltipHideOrShow();\n    }, 500);\n  }\n  componentWillLoad() {\n    this.titleName = this.setTooltipTitleText();\n  }\n  componentDidLoad() {\n    this.logWarnNoIconSrText();\n  }\n  logWarnNoIconSrText() {\n    if (this.iconOnly && !this.titleName) {\n      logWarn(this.root, 'No screenreader-text provided. Provide a localized screenreader-text property for the gux-icon. The screenreader-text property is used for the icon screenreader text and the tooltip.');\n    }\n  }\n  addIconDecorative() {\n    this.root.classList.add('gux-tooltip-icon-decorative');\n  }\n  getTitleElements() {\n    var _a;\n    const slot = this.root.querySelector('slot');\n    const target = (_a = this.root.querySelector('.gux-title-container span')) === null || _a === void 0 ? void 0 : _a.children;\n    if (slot) {\n      return slot.assignedElements();\n    }\n    else if (target) {\n      return Array.from(target);\n    }\n    return [];\n  }\n  getTitleTextContent() {\n    if (this.root.querySelector('slot')) {\n      return this.root\n        .querySelector('slot')\n        .assignedNodes()\n        .map(node => node.textContent)\n        .join('')\n        .trim();\n    }\n    else if (this.root.querySelector('.gux-title-container')) {\n      return this.root.querySelector('.gux-title-container').textContent.trim();\n    }\n    return '';\n  }\n  setTooltipTitleText() {\n    let tooltipTitleText = this.getTitleTextContent();\n    this.getTitleElements().forEach(element => {\n      if (element.tagName === 'GUX-ICON' && !this.getTitleTextContent()) {\n        this.iconOnly = true;\n        tooltipTitleText = element.getAttribute('screenreader-text');\n      }\n      else if (element.tagName === 'GUX-ICON' && this.getTitleTextContent()) {\n        this.addIconDecorative();\n      }\n    });\n    return tooltipTitleText;\n  }\n  checkForTooltipHideOrShow() {\n    const titleContainer = this.root.querySelector('.gux-title-container');\n    this.root.classList.remove('gux-overflow-hidden');\n    if (this.iconOnly && this.titleName) {\n      this.hasTooltip = true;\n    }\n    else if ((titleContainer === null || titleContainer === void 0 ? void 0 : titleContainer.scrollWidth) > (titleContainer === null || titleContainer === void 0 ? void 0 : titleContainer.offsetWidth)) {\n      this.root.classList.add('gux-overflow-hidden');\n      this.hasTooltip = true;\n    }\n    else {\n      this.hasTooltip = false;\n    }\n  }\n  render() {\n    return [\n      h(\"span\", { class: \"gux-title-container\" }, h(\"slot\", null)),\n      this.renderTooltip()\n    ];\n  }\n  renderTooltip() {\n    if (this.hasTooltip) {\n      return (h(\"gux-tooltip\", { \"aria-hidden\": \"true\", ref: el => (this.tooltipElement = el), hidden: !this.showTooltip }, this.titleName));\n    }\n  }\n  get root() { return getElement(this); }\n};\n__decorate([\n  OnMutation({ childList: true, subtree: true, characterData: true })\n], GuxTooltipTitle.prototype, \"onMutation\", null);\nGuxTooltipTitle.style = guxTooltipTitleCss;\n\nexport { GuxTooltipTitle as gux_tooltip_title };\n","function logError(component, message) {\n  console.error(`[${component.tagName.toLowerCase()}] ${message}`, component);\n}\nfunction logWarn(component, message) {\n  console.warn(`[${component.tagName.toLowerCase()}] ${message}`, component);\n}\n\nexport { logWarn as a, logError as l };\n","import { g as getElement } from './index-816e34d8.js';\n\n/* eslint-disable @typescript-eslint/no-unsafe-argument */\nfunction OnMutation(options) {\n  return (proto, methodName) => {\n    const { connectedCallback, disconnectedCallback } = proto;\n    const store = new Map();\n    proto.connectedCallback = function () {\n      const method = this[methodName];\n      const observer = new MutationObserver(method.bind(this));\n      registerObserver(store, this, observer, options);\n      return connectedCallback && connectedCallback.call(this);\n    };\n    proto.disconnectedCallback = function () {\n      deregisterObserver(store, this);\n      return disconnectedCallback && disconnectedCallback.call(this);\n    };\n  };\n}\nfunction registerObserver(store, key, observer, options) {\n  if (store.has(key)) {\n    store.get(key).disconnect();\n  }\n  store.set(key, observer);\n  observer.observe(getElement(key), options);\n}\nfunction deregisterObserver(store, key) {\n  if (store.has(key)) {\n    store.get(key).disconnect();\n  }\n  store.delete(key);\n}\n\nexport { OnMutation as O };\n"],"names":["afterNextRender","callback","requestAnimationFrame","afterNextRenderTimeout","setTimeout","arguments","length","undefined","__decorate","decorators","target","key","desc","d","c","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","GuxTooltipTitle","hostRef","_classCallCheck","registerInstance","this","hasTooltip","showTooltip","iconOnly","titleName","_createClass","value","event","buttons","_setShowTooltip","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","tooltipElement","stop","apply","_setHideTooltip","_callee2","_context2","hideTooltip","_this","setTooltipTitleText","checkForTooltipHideOrShow","logWarnNoIconSrText","logWarn","root","classList","add","_a","slot","querySelector","children","assignedElements","Array","from","assignedNodes","map","node","textContent","join","trim","_this2","tooltipTitleText","getTitleTextContent","getTitleElements","forEach","element","tagName","addIconDecorative","getAttribute","titleContainer","remove","scrollWidth","offsetWidth","h","class","renderTooltip","_this3","ref","el","hidden","get","getElement","OnMutation","childList","subtree","characterData","prototype","style","logError","component","message","console","error","concat","toLowerCase","warn","options","proto","methodName","connectedCallback","disconnectedCallback","store","Map","method","observer","MutationObserver","bind","has","disconnect","set","observe","registerObserver","call","delete","deregisterObserver"],"sourceRoot":""}