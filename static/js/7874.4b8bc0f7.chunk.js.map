{"version":3,"file":"static/js/7874.4b8bc0f7.chunk.js","mappings":"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","sources":["../node_modules/genesys-spark-components/dist/esm/gux-form-field-range.entry.js"],"sourcesContent":["import { r as registerInstance, h, H as Host, g as getElement } from './index-816e34d8.js';\nimport { c as calculateInputDisabledState, o as onInputDisabledStateChange } from './on-input-disabled-state-change-3ea76372.js';\nimport { O as OnMutation } from './on-mutation-9b53a0da.js';\nimport { o as onRequiredChange } from './on-attribute-change-5fd8da7c.js';\nimport { p as preventBrowserValidationStyling } from './prevent-browser-validation-styling-d16c3f4c.js';\nimport { h as hasSlot } from './has-slot-062ae63a.js';\nimport { G as GuxFormFieldError, a as GuxFormFieldHelp, g as getSlottedInput, v as validateFormIds, b as getComputedLabelPosition } from './gux-form-field.service-57a80f91.js';\nimport { a as GuxFormFieldContainer, G as GuxFormFieldLabel } from './gux-form-field-container-40484056.js';\nimport { t as trackComponent } from './usage-f636627a.js';\nimport './random-html-id-8e3f658c.js';\nimport './log-error-e0bbd04a.js';\nimport './set-input-value-5adeaccc.js';\nimport './simulate-native-event-ac69961f.js';\n\nconst guxFormFieldRangeCss = \".gux-form-field-container{margin:var(--gux-form-field-container-margin-top, 16px) 0 var(--gux-form-field-container-margin-bottom, 16px) 0}.gux-form-field-container.gux-beside{display:flex;flex-direction:row}.gux-form-field-error{display:none;flex-direction:row;flex-wrap:nowrap;align-content:stretch;align-items:flex-start;justify-content:flex-start;margin:4px 0;font-size:12px;line-height:20px;color:#2e394c}.gux-form-field-error.gux-show{display:flex}.gux-form-field-error gux-icon{flex:0 1 auto;align-self:auto;order:0;min-width:16px;min-height:16px;margin:2px 4px 0 0;color:#ea0b0b}.gux-form-field-error .gux-message{flex:0 1 auto;align-self:auto;order:0}.gux-form-field-label.gux-required::after{font-size:12px;color:#ea0b0b;content:' *'}.gux-form-field-label.gux-beside{position:relative;top:8px;width:fit-content;min-width:45px;margin-right:8px}.gux-form-field-label.gux-above{margin-bottom:8px}.gux-form-field-label.gux-screenreader{position:absolute;top:auto;left:-10000px;width:1px;height:1px;overflow:hidden}.gux-form-field-help{display:none;flex-direction:row;flex-wrap:nowrap;align-content:stretch;align-items:flex-start;justify-content:flex-start;margin:4px 0;font-size:12px;font-weight:400;line-height:20px;color:#6b7585}.gux-form-field-help.gux-show{display:flex}.gux-form-field-help .gux-message{flex:0 1 auto;align-self:none;order:0}:host{display:block;color:#2e394c}::slotted(label){font-family:Roboto, sans-serif;font-weight:400;font-weight:700;font-size:12px;line-height:16px}::slotted(input[type='range']){position:absolute;width:100%;height:2px;margin:6px 0;margin-top:calc(-1 * (12px / 2 + 2px));-webkit-appearance:none;background:transparent}.gux-input-and-error-container{flex-grow:1}.gux-input-and-error-container .gux-range-input-container{display:flex;flex-direction:row;flex-wrap:nowrap;align-content:stretch;align-items:center;justify-content:flex-start;height:32px;font-size:12px}.gux-input-and-error-container .gux-range-input-container.gux-disabled{opacity:0.5}.gux-input-and-error-container .gux-range-input-container .gux-range{position:relative;flex:1 1 auto;align-self:center;order:0}.gux-input-and-error-container .gux-range-input-container .gux-range:hover .gux-range-tooltip,.gux-input-and-error-container .gux-range-input-container .gux-range:focus-within .gux-range-tooltip{visibility:visible}.gux-input-and-error-container .gux-range-input-container .gux-range .gux-track{width:100%;height:2px;margin:6px 0;background-color:#8a97ad}.gux-input-and-error-container .gux-range-input-container .gux-range .gux-track .gux-progress{height:2px;background-color:#2a60c8}.gux-input-and-error-container .gux-range-input-container .gux-display{flex:0 1 auto;align-self:auto;order:0;height:32px;margin:0 0 0 16px;line-height:32px;text-align:right}.gux-input-and-error-container .gux-range-input-container .gux-display.gux-hidden{display:none}.gux-input-and-error-container .gux-range-tooltip-container{position:absolute;top:-50px;width:100%;height:32px;pointer-events:none}.gux-input-and-error-container .gux-range-tooltip-container.gux-hidden{display:none}.gux-input-and-error-container .gux-range-tooltip-container .gux-range-tooltip{font-family:Roboto, sans-serif;font-weight:400;font-size:11px;line-height:16px;position:absolute;z-index:var(--gux-zindex-tooltip, 1);display:flex;align-items:center;justify-content:center;width:50px;height:32px;margin-left:-20px;visibility:hidden;background-color:#fdfdfd;border:1px solid #b4bccb;border-radius:4px;box-shadow:0 2px 4px rgba(32, 41, 55, 0.24)}.gux-input-and-error-container .gux-range-tooltip-container .gux-range-tooltip::after,.gux-input-and-error-container .gux-range-tooltip-container .gux-range-tooltip::before{position:absolute;top:100%;left:50%;width:0;height:0;pointer-events:none;content:' ';border:solid transparent}.gux-input-and-error-container .gux-range-tooltip-container .gux-range-tooltip::after{margin-left:-4px;border-width:4px;border-top-color:#fdfdfd}.gux-input-and-error-container .gux-range-tooltip-container .gux-range-tooltip::before{margin-left:-6px;border-width:6px;border-top-color:#b4bccb}\";\n\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\")\n    r = Reflect.decorate(decorators, target, key, desc);\n  else\n    for (var i = decorators.length - 1; i >= 0; i--)\n      if (d = decorators[i])\n        r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nconst GuxFormField = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.displayUnits = undefined;\n    this.valueInTooltip = undefined;\n    this.labelPosition = undefined;\n    this.computedLabelPosition = 'above';\n    this.disabled = undefined;\n    this.required = undefined;\n    this.hasError = false;\n    this.hasHelp = false;\n    this.value = undefined;\n    this.active = undefined;\n    this.valueWatcherId = undefined;\n  }\n  onInput(e) {\n    const input = e.target;\n    this.updateValue(input.value);\n  }\n  onMousedown() {\n    if (!this.disabled) {\n      this.active = true;\n    }\n  }\n  onMouseup() {\n    this.active = false;\n  }\n  onMutation() {\n    this.hasError = hasSlot(this.root, 'error');\n    this.hasHelp = hasSlot(this.root, 'help');\n  }\n  componentWillLoad() {\n    this.setInput();\n    this.setLabel();\n    this.hasError = hasSlot(this.root, 'error');\n    this.hasHelp = hasSlot(this.root, 'help');\n    trackComponent(this.root, { variant: this.variant });\n  }\n  componentDidLoad() {\n    this.updatePosition();\n  }\n  disconnectedCallback() {\n    if (this.disabledObserver) {\n      this.disabledObserver.disconnect();\n    }\n    if (this.requiredObserver) {\n      this.requiredObserver.disconnect();\n    }\n    clearInterval(this.valueWatcherId);\n  }\n  render() {\n    return (h(Host, { class: {\n        'gux-active': this.active\n      } }, h(GuxFormFieldContainer, { labelPosition: this.computedLabelPosition }, h(GuxFormFieldLabel, { position: this.computedLabelPosition, required: this.required }, h(\"slot\", { name: \"label\", onSlotchange: () => this.setLabel() })), h(\"div\", { class: \"gux-input-and-error-container\" }, this.renderRangeInput(), h(GuxFormFieldError, { show: this.hasError }, h(\"slot\", { name: \"error\" })), h(GuxFormFieldHelp, { show: !this.hasError && this.hasHelp }, h(\"slot\", { name: \"help\" }))))));\n  }\n  get variant() {\n    return this.labelPosition ? this.labelPosition.toLowerCase() : 'none';\n  }\n  setInput() {\n    this.input = getSlottedInput(this.root, 'input[type=\"range\"][slot=\"input\"]');\n    preventBrowserValidationStyling(this.input);\n    this.disabled = calculateInputDisabledState(this.input);\n    this.required = this.input.required;\n    this.value = this.input.value;\n    this.disabledObserver = onInputDisabledStateChange(this.input, (disabled) => {\n      this.disabled = disabled;\n    });\n    this.requiredObserver = onRequiredChange(this.input, (required) => {\n      this.required = required;\n    });\n    clearInterval(this.valueWatcherId);\n    this.valueWatcherId = setInterval(() => {\n      if (this.value !== this.input.value) {\n        this.updateValue(this.input.value);\n      }\n    }, 100);\n    validateFormIds(this.root, this.input);\n  }\n  setLabel() {\n    this.label = this.root.querySelector('label[slot=\"label\"]');\n    this.computedLabelPosition = getComputedLabelPosition(this.label, this.labelPosition);\n  }\n  renderRangeInput() {\n    return (h(\"div\", { class: {\n        'gux-range-input-container': true,\n        'gux-disabled': this.disabled\n      } }, h(\"div\", { class: \"gux-range\" }, h(\"div\", { class: \"gux-track\" }, h(\"div\", { class: \"gux-progress\", ref: el => (this.progressElement = el) })), h(\"slot\", { name: \"input\" }), h(\"div\", { class: {\n        'gux-range-tooltip-container': true,\n        'gux-hidden': !this.valueInTooltip\n      }, ref: el => (this.sliderTooltipContainer = el) }, h(\"div\", { class: \"gux-range-tooltip\", ref: el => (this.sliderTooltip = el) }, this.getDisplayValue()))), h(\"div\", { class: {\n        'gux-display': true,\n        'gux-hidden': this.valueInTooltip\n      } }, this.getDisplayValue())));\n  }\n  updateValue(newValue) {\n    this.value = newValue;\n    this.updatePosition();\n  }\n  updatePosition() {\n    const value = Number(this.input.value || 0);\n    const min = Number(this.input.min || 0);\n    const max = Number(this.input.max || 100);\n    const placementPercentage = ((value - min) / (max - min)) * 100;\n    if (this.sliderTooltip) {\n      const width = this.sliderTooltipContainer.offsetWidth;\n      const offset = placementPercentage - (placementPercentage / 8 / width) * 100;\n      this.sliderTooltip.style.left = `${offset}%`;\n    }\n    this.progressElement.style.width = `${placementPercentage}%`;\n  }\n  getDisplayValue() {\n    if (this.displayUnits) {\n      return `${this.value}${this.displayUnits}`;\n    }\n    return this.value;\n  }\n  get root() { return getElement(this); }\n};\n__decorate([\n  OnMutation({ childList: true, subtree: true })\n], GuxFormField.prototype, \"onMutation\", null);\nGuxFormField.style = guxFormFieldRangeCss;\n\nexport { GuxFormField as gux_form_field_range };\n"],"names":["__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","GuxFormField","hostRef","_classCallCheck","registerInstance","this","displayUnits","undefined","valueInTooltip","labelPosition","computedLabelPosition","disabled","required","hasError","hasHelp","value","active","valueWatcherId","_createClass","e","input","updateValue","hasSlot","root","setInput","setLabel","trackComponent","variant","updatePosition","disabledObserver","disconnect","requiredObserver","clearInterval","_this","h","Host","class","GuxFormFieldContainer","GuxFormFieldLabel","position","name","onSlotchange","renderRangeInput","GuxFormFieldError","show","GuxFormFieldHelp","get","toLowerCase","_this2","getSlottedInput","preventBrowserValidationStyling","calculateInputDisabledState","onInputDisabledStateChange","onRequiredChange","setInterval","validateFormIds","label","querySelector","getComputedLabelPosition","_this3","ref","el","progressElement","sliderTooltipContainer","sliderTooltip","getDisplayValue","newValue","Number","min","placementPercentage","max","offset","offsetWidth","style","left","concat","width","getElement","OnMutation","childList","subtree","prototype"],"sourceRoot":""}