{"version":3,"file":"static/js/1986.4cf4da66.chunk.js","mappings":"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","sources":["../node_modules/genesys-spark-components/dist/esm/clamp-6bdb0367.js","../node_modules/genesys-spark-components/dist/esm/gux-column-manager-item.entry.js","../node_modules/genesys-spark-components/dist/esm/gux-column-manager.service-07ddccf5.js","../node_modules/genesys-spark-components/dist/esm/simulate-native-event-ac69961f.js"],"sourcesContent":["function clamp(input, lower = -Infinity, upper = Infinity) {\n  if (isNaN(input)) {\n    return NaN;\n  }\n  return Math.min(Math.max(input, lower), upper);\n}\n\nexport { clamp as c };\n","import { r as registerInstance, c as createEvent, h, H as Host, g as getElement } from './index-816e34d8.js';\nimport { b as buildI18nForComponent } from './index-992b023e.js';\nimport { c as getIndexInParent } from './gux-column-manager.service-07ddccf5.js';\nimport './get-closest-element-1597503c.js';\nimport './clamp-6bdb0367.js';\nimport './simulate-native-event-ac69961f.js';\n\nfunction getNewIndex(oldIndex, dropIndex, mouseOnTopHalfOfDropElement) {\n  if (oldIndex < dropIndex) {\n    if (mouseOnTopHalfOfDropElement) {\n      return dropIndex - 1;\n    }\n    return dropIndex;\n  }\n  if (mouseOnTopHalfOfDropElement) {\n    return dropIndex;\n  }\n  return dropIndex + 1;\n}\n\nconst activateReordering = \"Activate reordering mode for {columnName} column\";\nconst translationResources = {\n\tactivateReordering: activateReordering\n};\n\nconst guxColumnManagerItemCss = \":host([gs-reorder-indicator='above']) .gux-container{border-top-color:#aac9ff}:host([gs-reorder-indicator='below']) .gux-container{border-bottom-color:#aac9ff}.gux-container{display:flex;flex-direction:row;flex-wrap:nowrap;align-content:stretch;align-items:center;justify-content:flex-start;margin-bottom:-2px;border-top:2px solid transparent;border-bottom:2px solid transparent}.gux-container.gux-drop-above{border-top-color:#aac9ff}.gux-container.gux-drop-below{border-bottom-color:#aac9ff}.gux-container.gux-dragging{border-top-color:transparent;border-bottom-color:transparent;opacity:0.4}.gux-container .gux-reorder{all:unset;flex:0 1 auto;align-self:auto;order:0;margin-right:4px;color:#596373;cursor:grab;border-radius:4px}.gux-container .gux-reorder.gux-reordering:focus-visible gux-icon{color:#2a60c8}.gux-container .gux-reorder:active{pointer-events:none;cursor:grabbing !important}.gux-container .gux-reorder:hover,.gux-container .gux-reorder:focus-visible{outline:2px solid #aac9ff;outline-offset:0}.gux-container .gux-reorder:hover gux-icon,.gux-container .gux-reorder:focus-visible gux-icon{color:#2a60c8}.gux-container .gux-select{position:relative;flex:1 1 auto;align-self:auto;order:1}.gux-container .gux-select gux-text-highlight{position:absolute;top:2px;left:24px;color:transparent;pointer-events:none;opacity:0.25}.gux-container .gux-select gux-text-highlight.gux-active{opacity:1}.gux-sr-only:not(:focus):not(:active){position:absolute;width:1px;height:1px;overflow:hidden;clip:rect(0 0 0 0);clip-path:inset(50%);white-space:nowrap}\";\n\nconst GuxColumnManagerItem = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.internal_order_change = createEvent(this, \"internal_order_change\", 7);\n    this.internal_keyboard_reorder_start = createEvent(this, \"internal_keyboard_reorder_start\", 7);\n    this.internal_keyboard_reorder_move = createEvent(this, \"internal_keyboard_reorder_move\", 7);\n    this.internal_keyboard_reorder_emit = createEvent(this, \"internal_keyboard_reorder_emit\", 7);\n    this.internal_keyboard_reorder_finish = createEvent(this, \"internal_keyboard_reorder_finish\", 7);\n    this.orderId = undefined;\n    this.highlightActive = undefined;\n    this.highlight = undefined;\n    this.text = undefined;\n    this.pendingReorder = 'none';\n    this.isDragging = false;\n    this.isReordering = false;\n  }\n  // eslint-disable-next-line @typescript-eslint/require-await\n  async guxSetHighlight(highlight = '', highlightActive = false) {\n    this.highlight = highlight;\n    this.highlightActive = highlightActive;\n  }\n  // eslint-disable-next-line @typescript-eslint/require-await\n  async guxFocus() {\n    this.reorderButtonElement.focus();\n  }\n  onBlur() {\n    this.setReorderMode(false);\n  }\n  onDragStart(event) {\n    this.isDragging = true;\n    const oldIndex = getIndexInParent(this.root);\n    event.dataTransfer.setData('oldIndex', String(oldIndex));\n    event.dataTransfer.effectAllowed = 'move';\n  }\n  onDragEnter(event) {\n    event.dataTransfer.dropEffect = 'move';\n    this.pendingReorder = this.mouseOnTopHalf(event) ? 'above' : 'below';\n  }\n  onDragOver(event) {\n    event.preventDefault();\n    this.pendingReorder = this.mouseOnTopHalf(event) ? 'above' : 'below';\n  }\n  onDragLeave() {\n    this.pendingReorder = 'none';\n  }\n  onDragEnd() {\n    this.isDragging = false;\n  }\n  onDrop(event) {\n    const oldIndex = Number(event.dataTransfer.getData('oldIndex'));\n    const dropIndex = getIndexInParent(this.root);\n    event.stopPropagation(); // stops the browser from redirecting.\n    event.stopImmediatePropagation();\n    this.pendingReorder = 'none';\n    const newIndex = getNewIndex(oldIndex, dropIndex, this.mouseOnTopHalf(event));\n    this.internal_order_change.emit({ oldIndex, newIndex });\n    return false;\n  }\n  mouseOnTopHalf(event) {\n    const rect = this.root.getBoundingClientRect();\n    return event.clientY - rect.top <= (rect.bottom - rect.top) / 2;\n  }\n  onSlotChange() {\n    this.text = this.root.querySelector('gux-form-field-checkbox label').textContent;\n  }\n  setReorderMode(isReordering, doReorder = false) {\n    if (this.isReordering !== isReordering) {\n      this.isReordering = isReordering;\n      if (isReordering) {\n        this.internal_keyboard_reorder_start.emit(this.text);\n      }\n      else {\n        if (doReorder) {\n          this.internal_keyboard_reorder_emit.emit();\n        }\n        this.internal_keyboard_reorder_finish.emit();\n      }\n    }\n  }\n  toggleReorderMode() {\n    this.setReorderMode(!this.isReordering, true);\n  }\n  keyboardReorder(event) {\n    if (this.isReordering) {\n      switch (event.key) {\n        case 'ArrowUp': {\n          event.preventDefault();\n          this.internal_keyboard_reorder_move.emit({\n            delta: -1,\n            column: this.text\n          });\n          break;\n        }\n        case 'ArrowDown': {\n          event.preventDefault();\n          this.internal_keyboard_reorder_move.emit({\n            delta: 1,\n            column: this.text\n          });\n          break;\n        }\n        case 'Home': {\n          event.preventDefault();\n          this.internal_keyboard_reorder_move.emit({\n            delta: -Infinity,\n            column: this.text\n          });\n          break;\n        }\n        case 'End': {\n          event.preventDefault();\n          console.log('End');\n          this.internal_keyboard_reorder_move.emit({\n            delta: Infinity,\n            column: this.text\n          });\n          break;\n        }\n        case 'Escape': {\n          event.preventDefault();\n          this.setReorderMode(false);\n        }\n      }\n    }\n  }\n  async componentWillLoad() {\n    this.i18n = await buildI18nForComponent(this.root, translationResources);\n  }\n  render() {\n    return (h(Host, { draggable: \"true\" }, h(\"div\", { class: {\n        'gux-container': true,\n        [`gux-drop-${this.pendingReorder}`]: true,\n        'gux-dragging': this.isDragging\n      } }, h(\"button\", { class: {\n        'gux-reorder': true,\n        'gux-reordering': this.isReordering\n      }, type: \"button\", onClick: () => this.toggleReorderMode(), onKeyDown: event => this.keyboardReorder(event), ref: el => (this.reorderButtonElement = el) }, h(\"gux-icon\", { \"icon-name\": \"grab-vertical\", decorative: true }), h(\"span\", { class: \"gux-sr-only\" }, this.i18n('activateReordering', { columnName: this.text }))), h(\"div\", { class: \"gux-select\" }, h(\"slot\", { onSlotchange: () => this.onSlotChange() }), h(\"gux-text-highlight\", { class: { 'gux-active': this.highlightActive }, highlight: this.highlight, text: this.text, strategy: \"contains\" })))));\n  }\n  get root() { return getElement(this); }\n};\nGuxColumnManagerItem.style = guxColumnManagerItemCss;\n\nexport { GuxColumnManagerItem as gux_column_manager_item };\n","import { c as clamp } from './clamp-6bdb0367.js';\nimport { s as simulateNativeEvent } from './simulate-native-event-ac69961f.js';\n\nfunction getNewOrder(root, { oldIndex, newIndex }) {\n  const order = Array.from(root.children).map(x => x.orderId);\n  const [element] = order.splice(oldIndex, 1);\n  order.splice(newIndex, 0, element);\n  return order;\n}\nfunction setKeyboardReorderPositionIndicator(root, { oldIndex, newIndex }) {\n  getColumnManagerItems(root).forEach((item, index) => {\n    if (index !== newIndex) {\n      item.removeAttribute('gs-reorder-indicator');\n    }\n    else {\n      const position = newIndex < oldIndex ? 'above' : 'below';\n      item.setAttribute('gs-reorder-indicator', position);\n    }\n  });\n}\nfunction getNewKeyboardOrderChange(root, currentKeyboardOrderChange, delta) {\n  const newIndex = clamp(currentKeyboardOrderChange.newIndex + delta, 0, Array.from(root.children).length - 1);\n  return Object.assign({}, currentKeyboardOrderChange, { newIndex });\n}\nfunction getEmptyKeyboardOrderChange() {\n  return { oldIndex: null, newIndex: null };\n}\nfunction getIndexInParent(target) {\n  return Array.from(target.parentNode.children).indexOf(target);\n}\nfunction setAllCheckboxInputs(root, checked) {\n  getCheckboxInputs(root).forEach(checkboxInput => {\n    if (checkboxInput.checked !== checked) {\n      checkboxInput.checked = checked;\n      simulateNativeEvent(checkboxInput, 'input');\n      simulateNativeEvent(checkboxInput, 'change');\n    }\n  });\n}\nfunction setMainCheckboxElementCheckedState(root, mainCheckboxElement) {\n  const { count, total } = getSelectedColumnCount(root);\n  if (count === 0) {\n    mainCheckboxElement.indeterminate = false;\n    mainCheckboxElement.checked = false;\n  }\n  else if (count === total) {\n    mainCheckboxElement.indeterminate = false;\n    mainCheckboxElement.checked = true;\n  }\n  else {\n    mainCheckboxElement.indeterminate = true;\n  }\n}\nfunction getSelectedColumnCount(root) {\n  const total = getCheckboxInputs(root).length;\n  const count = getCheckedCheckboxInputs(root).length;\n  return { count, total };\n}\nfunction setHighlights(root, searchElement, currentMatch = 1) {\n  return getColumnManagerItems(root).reduce((acc, item) => {\n    const searchString = searchElement.value.toLowerCase();\n    if (searchString &&\n      item.textContent.toLowerCase().includes(searchString)) {\n      const matchCount = acc.matchCount + 1;\n      void item.guxSetHighlight(searchElement.value, matchCount === currentMatch);\n      return { matchCount, currentMatch };\n    }\n    void item.guxSetHighlight();\n    return acc;\n  }, { matchCount: 0, currentMatch: 0 });\n}\nfunction getCheckboxInputs(root) {\n  return Array.from(root.querySelectorAll('input[type=checkbox]'));\n}\nfunction getCheckedCheckboxInputs(root) {\n  const checkboxInputs = getCheckboxInputs(root);\n  return checkboxInputs.filter(x => x.checked);\n}\nfunction getColumnManagerItems(root) {\n  return Array.from(root.querySelectorAll('gux-column-manager-item'));\n}\n\nexport { setMainCheckboxElementCheckedState as a, getNewOrder as b, getIndexInParent as c, getNewKeyboardOrderChange as d, setHighlights as e, setAllCheckboxInputs as f, getEmptyKeyboardOrderChange as g, getSelectedColumnCount as h, setKeyboardReorderPositionIndicator as s };\n","function simulateNativeEvent(targetElement, nativeEventName) {\n  switch (nativeEventName) {\n    case 'change':\n      return targetElement.dispatchEvent(new InputEvent('change', {\n        bubbles: true\n      }));\n    case 'input':\n      return targetElement.dispatchEvent(new InputEvent('input', {\n        bubbles: true\n      }));\n  }\n}\n\nexport { simulateNativeEvent as s };\n"],"names":["clamp","input","lower","arguments","length","undefined","Infinity","upper","isNaN","NaN","Math","min","max","translationResources","activateReordering","GuxColumnManagerItem","hostRef","_classCallCheck","registerInstance","this","internal_order_change","createEvent","internal_keyboard_reorder_start","internal_keyboard_reorder_move","internal_keyboard_reorder_emit","internal_keyboard_reorder_finish","orderId","highlightActive","highlight","text","pendingReorder","isDragging","isReordering","_createClass","key","value","_guxSetHighlight","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_args","wrap","_context","prev","next","stop","apply","_guxFocus","_callee2","_context2","reorderButtonElement","focus","setReorderMode","event","oldIndex","getIndexInParent","root","dataTransfer","setData","String","effectAllowed","dropEffect","mouseOnTopHalf","preventDefault","Number","getData","dropIndex","stopPropagation","stopImmediatePropagation","newIndex","mouseOnTopHalfOfDropElement","getNewIndex","emit","rect","getBoundingClientRect","clientY","top","bottom","querySelector","textContent","doReorder","delta","column","console","log","_componentWillLoad","_callee3","_context3","buildI18nForComponent","i18n","sent","_class","_this","h","Host","draggable","class","_defineProperty","concat","type","onClick","toggleReorderMode","onKeyDown","keyboardReorder","ref","el","decorative","columnName","onSlotchange","onSlotChange","strategy","get","getElement","style","getNewOrder","_ref","order","Array","from","children","map","x","_order$splice","splice","element","_slicedToArray","setKeyboardReorderPositionIndicator","_ref2","getColumnManagerItems","forEach","item","index","removeAttribute","position","setAttribute","getNewKeyboardOrderChange","currentKeyboardOrderChange","Object","assign","getEmptyKeyboardOrderChange","target","parentNode","indexOf","setAllCheckboxInputs","checked","getCheckboxInputs","checkboxInput","simulateNativeEvent","setMainCheckboxElementCheckedState","mainCheckboxElement","_getSelectedColumnCou","getSelectedColumnCount","count","total","indeterminate","checkboxInputs","filter","getCheckedCheckboxInputs","setHighlights","searchElement","currentMatch","reduce","acc","searchString","toLowerCase","includes","matchCount","guxSetHighlight","querySelectorAll","targetElement","nativeEventName","dispatchEvent","InputEvent","bubbles"],"sourceRoot":""}