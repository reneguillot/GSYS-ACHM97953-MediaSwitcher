{"version":3,"file":"static/js/6795.97f32559.chunk.js","mappings":"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","sources":["../node_modules/genesys-spark-components/dist/esm/gux-popup-beta.entry.js"],"sourcesContent":["import { r as registerInstance, c as createEvent, h } from './index-816e34d8.js';\nimport { a as autoUpdate, c as computePosition, o as offset, f as flip, d as size, s as shift, h as hide } from './floating-ui.dom.esm-483496c9.js';\n\nconst guxPopupBetaCss = \".gux-target-container.gux-disabled{pointer-events:none;cursor:default;opacity:0.5}.gux-popup-container{position:fixed;z-index:var(--gux-zindex-popup, 1);width:max-content;visibility:hidden}.gux-popup-container.gux-expanded{visibility:visible}.gux-sr-only-clip:not(:focus):not(:active){position:absolute;width:1px;height:1px;overflow:hidden;clip:rect(0 0 0 0);clip-path:inset(50%);white-space:nowrap}\";\n\nconst GuxPopupBeta = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.internalexpanded = createEvent(this, \"internalexpanded\", 7);\n    this.internalcollapsed = createEvent(this, \"internalcollapsed\", 7);\n    this.expanded = false;\n    this.disabled = false;\n    this.exceedTargetWidth = false;\n  }\n  runUpdatePosition() {\n    this.cleanupUpdatePosition = autoUpdate(this.targetElementContainer, this.popupElementContainer, () => this.updatePosition(), {\n      ancestorScroll: true,\n      elementResize: true,\n      animationFrame: true,\n      ancestorResize: true\n    });\n  }\n  updatePosition() {\n    if (this.targetElementContainer && this.popupElementContainer) {\n      const popupElementContainer = this.popupElementContainer;\n      const assignMinWidth = this.exceedTargetWidth;\n      void computePosition(this.targetElementContainer, this.popupElementContainer, {\n        strategy: 'fixed',\n        placement: 'bottom-start',\n        middleware: [\n          offset(2),\n          flip(),\n          size({\n            apply({ rects }) {\n              if (assignMinWidth) {\n                Object.assign(popupElementContainer.style, {\n                  minWidth: `${rects.reference.width}px`\n                });\n              }\n              else {\n                Object.assign(popupElementContainer.style, {\n                  width: `${rects.reference.width}px`\n                });\n              }\n            }\n          }),\n          shift(),\n          hide()\n        ]\n      }).then(({ x, y, middlewareData }) => {\n        const { referenceHidden } = middlewareData.hide;\n        Object.assign(this.popupElementContainer.style, {\n          left: `${x}px`,\n          top: `${y}px`\n        });\n        referenceHidden\n          ? this.popupElementContainer.classList.add('gux-sr-only-clip')\n          : this.popupElementContainer.classList.remove('gux-sr-only-clip');\n      });\n    }\n  }\n  onExpandedChange(expanded) {\n    if (expanded) {\n      this.internalexpanded.emit();\n    }\n    else {\n      this.internalcollapsed.emit();\n    }\n  }\n  componentDidLoad() {\n    if (this.expanded) {\n      this.runUpdatePosition();\n    }\n  }\n  componentDidUpdate() {\n    if (this.expanded) {\n      this.runUpdatePosition();\n    }\n    else if (this.cleanupUpdatePosition) {\n      this.cleanupUpdatePosition();\n    }\n  }\n  disconnectedCallback() {\n    if (this.cleanupUpdatePosition) {\n      this.cleanupUpdatePosition();\n    }\n  }\n  render() {\n    return (h(\"div\", { class: {\n        'gux-target-container': true,\n        'gux-disabled': this.disabled\n      }, ref: (el) => (this.targetElementContainer = el) }, h(\"slot\", { name: \"target\" }), h(\"div\", { class: {\n        'gux-popup-container': true,\n        'gux-expanded': this.expanded && !this.disabled\n      }, ref: (el) => (this.popupElementContainer = el) }, h(\"slot\", { name: \"popup\" }))));\n  }\n  static get watchers() { return {\n    \"expanded\": [\"onExpandedChange\"]\n  }; }\n};\nGuxPopupBeta.style = guxPopupBetaCss;\n\nexport { GuxPopupBeta as gux_popup_beta };\n"],"names":["GuxPopupBeta","hostRef","_classCallCheck","registerInstance","this","internalexpanded","createEvent","internalcollapsed","expanded","disabled","exceedTargetWidth","_createClass","key","value","_this","cleanupUpdatePosition","autoUpdate","targetElementContainer","popupElementContainer","updatePosition","ancestorScroll","elementResize","animationFrame","ancestorResize","_this2","assignMinWidth","computePosition","strategy","placement","middleware","offset","flip","size","apply","_ref","rects","Object","assign","style","minWidth","concat","reference","width","shift","hide","then","_ref2","x","y","referenceHidden","middlewareData","left","top","classList","add","remove","emit","runUpdatePosition","_this3","h","class","ref","el","name","get"],"sourceRoot":""}