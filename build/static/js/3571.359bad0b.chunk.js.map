{"version":3,"file":"static/js/3571.359bad0b.chunk.js","mappings":"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","sources":["../node_modules/genesys-spark-components/dist/esm/after-next-render-ed0f7dcd.js","../node_modules/genesys-spark-components/dist/esm/en-66f138f8.js","../node_modules/genesys-spark-components/dist/esm/event-is-from-90b69768.js","../node_modules/genesys-spark-components/dist/esm/gux-table-select-menu.entry.js","../node_modules/genesys-spark-components/dist/esm/random-html-id-8e3f658c.js"],"sourcesContent":["function afterNextRender(callback) {\n  requestAnimationFrame(() => requestAnimationFrame(callback));\n}\nfunction afterNextRenderTimeout(callback, delay = 100) {\n  return setTimeout(callback, delay);\n}\n\nexport { afterNextRenderTimeout as a, afterNextRender as b };\n","const emptyMessage = \"No data available\";\nconst scrollLeft = \"Scroll Left\";\nconst scrollRight = \"Scroll Right\";\nconst selectAllTableRows = \"Select All Table Rows\";\nconst selectTableRow = \"Select Table Row\";\nconst sortAsc = \"Sorted Ascending\";\nconst sortDesc = \"Sorted Descending\";\nconst tableOptions = \"Table Options\";\nconst noColumnSort = \"{headerContent}. The table is not currently sorted by this column. Click the column header to sort the table by this column in ascending order\";\nconst ascendingColumnSort = \"{headerContent}. The table is currently sorted by this column in ascending order. Click the column header to sort the table by this column in descending order\";\nconst descendingColumnSort = \"{headerContent}. The table is currently sorted by this column in descending order. Click the column header to sort the table by this column in ascending order\";\nconst descendingColumnSortIncludeUnsorted = \"{headerContent}. The table is currently sorted by this column in descending order. Click the column header to not sort the table by this column\";\nconst tableResources = {\n\temptyMessage: emptyMessage,\n\tscrollLeft: scrollLeft,\n\tscrollRight: scrollRight,\n\tselectAllTableRows: selectAllTableRows,\n\tselectTableRow: selectTableRow,\n\tsortAsc: sortAsc,\n\tsortDesc: sortDesc,\n\ttableOptions: tableOptions,\n\tnoColumnSort: noColumnSort,\n\tascendingColumnSort: ascendingColumnSort,\n\tdescendingColumnSort: descendingColumnSort,\n\tdescendingColumnSortIncludeUnsorted: descendingColumnSortIncludeUnsorted\n};\n\nexport { tableResources as t };\n","/**\n * Checks to see if an event originated within an element matching a specific selector.\n */\nfunction eventIsFrom(selector, event) {\n  // Don't search for matches above the node where we captured the event;\n  const exitTarget = event.currentTarget;\n  // Start with the oringal event target\n  let checkTarget = event.target;\n  while (checkTarget !== exitTarget && checkTarget !== null) {\n    if (checkTarget.matches(selector)) {\n      return true;\n    }\n    else {\n      checkTarget = checkTarget.parentElement;\n    }\n  }\n  return false;\n}\n\nexport { eventIsFrom as e };\n","import { r as registerInstance, h, H as Host, g as getElement } from './index-816e34d8.js';\nimport { a as afterNextRenderTimeout } from './after-next-render-ed0f7dcd.js';\nimport { e as eventIsFrom } from './event-is-from-90b69768.js';\nimport { r as randomHTMLId } from './random-html-id-8e3f658c.js';\nimport { b as buildI18nForComponent } from './index-992b023e.js';\nimport { t as tableResources } from './en-66f138f8.js';\nimport './get-closest-element-1597503c.js';\n\nconst guxTableSelectMenuCss = \"gux-table-select-menu{display:inline-flex;font-weight:400}gux-table-select-menu .gux-select-menu-button{width:24px;height:24px;padding:0;color:#6b7585;background-color:inherit;border:none;border-radius:4px;outline:none}gux-table-select-menu .gux-select-menu-button:disabled{color:rgba(107, 117, 133, 0.5)}gux-table-select-menu .gux-select-menu-button:hover:not(gux-table-select-menu .gux-select-menu-button:disabled){color:#2e394c}gux-table-select-menu .gux-select-menu-button:focus-visible gux-icon{outline:3px solid #aac9ff;outline-offset:1px;box-shadow:0 0 0 1px #fdfdfd;border-radius:4px}gux-table-select-menu .gux-select-menu-button gux-icon{width:16px;height:16px}\";\n\nconst GuxTableSelectMenu = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.dropdownOptionsButtonId = randomHTMLId('gux-table-select-menu');\n    this.hasSelectMenuOptions = false;\n    this.dropdownDisabled = false;\n    this.popoverHidden = true;\n  }\n  focusFirstItemInPopupList() {\n    const listElement = this.root.querySelector('gux-list');\n    afterNextRenderTimeout(() => {\n      void (listElement === null || listElement === void 0 ? void 0 : listElement.guxFocusFirstItem());\n    });\n  }\n  async componentWillLoad() {\n    this.hasSelectMenuOptions = !!this.root.querySelector('[slot=\"select-menu-options\"]');\n    this.i18n = await buildI18nForComponent(this.root, tableResources, 'gux-table');\n  }\n  onKeydown(event) {\n    var _a;\n    switch (event.key) {\n      case 'ArrowDown':\n        if (eventIsFrom('.gux-select-menu-button', event)) {\n          this.toggleOptions();\n          this.focusFirstItemInPopupList();\n        }\n        break;\n      case 'Enter':\n        if (eventIsFrom('.gux-select-menu-button', event)) {\n          void this.focusFirstItemInPopupList();\n        }\n        break;\n      case 'Escape':\n        if (eventIsFrom('gux-list', event)) {\n          event.stopPropagation();\n          this.popoverHidden = true;\n          (_a = this.tableSelectMenuButtonElement) === null || _a === void 0 ? void 0 : _a.focus();\n        }\n        break;\n      case 'Tab':\n        this.popoverHidden = true;\n        break;\n    }\n  }\n  onKeyup(event) {\n    switch (event.key) {\n      case ' ':\n        if (eventIsFrom('.gux-select-menu-button', event)) {\n          this.focusFirstItemInPopupList();\n        }\n    }\n  }\n  toggleOptions() {\n    this.popoverHidden = !this.popoverHidden;\n  }\n  renderSelectDropdown() {\n    if (this.hasSelectMenuOptions) {\n      return [\n        h(\"button\", { id: this.dropdownOptionsButtonId, \"aria-haspopup\": \"listbox\", \"aria-expanded\": (!this.popoverHidden).toString(), type: \"button\", class: \"gux-select-menu-button\", ref: el => (this.tableSelectMenuButtonElement = el), onClick: () => this.toggleOptions(), disabled: this.dropdownDisabled }, h(\"gux-icon\", { \"icon-name\": \"chevron-small-down\", \"screenreader-text\": this.i18n('tableOptions') })),\n        h(\"gux-table-select-popover\", { for: this.dropdownOptionsButtonId, hidden: this.popoverHidden, closeOnClickOutside: true, onGuxdismiss: () => (this.popoverHidden = true) }, h(\"div\", null, h(\"slot\", { name: \"select-menu-options\" })))\n      ];\n    }\n  }\n  render() {\n    return (h(Host, null, h(\"slot\", null), this.renderSelectDropdown()));\n  }\n  get root() { return getElement(this); }\n};\nGuxTableSelectMenu.style = guxTableSelectMenuCss;\n\nexport { GuxTableSelectMenu as gux_table_select_menu };\n","function randomHTMLId(prefix = 'gux') {\n  return `${prefix}-${Math.random().toString(36).substr(2, 10)}`;\n}\n\nexport { randomHTMLId as r };\n"],"names":["afterNextRender","callback","requestAnimationFrame","afterNextRenderTimeout","setTimeout","arguments","length","undefined","tableResources","emptyMessage","scrollLeft","scrollRight","selectAllTableRows","selectTableRow","sortAsc","sortDesc","tableOptions","noColumnSort","ascendingColumnSort","descendingColumnSort","descendingColumnSortIncludeUnsorted","eventIsFrom","selector","event","exitTarget","currentTarget","checkTarget","target","matches","parentElement","GuxTableSelectMenu","hostRef","_classCallCheck","registerInstance","this","dropdownOptionsButtonId","randomHTMLId","hasSelectMenuOptions","dropdownDisabled","popoverHidden","_createClass","key","value","listElement","root","querySelector","guxFocusFirstItem","_componentWillLoad","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","buildI18nForComponent","i18n","sent","stop","apply","_a","toggleOptions","focusFirstItemInPopupList","stopPropagation","tableSelectMenuButtonElement","focus","_this","h","id","toString","type","class","ref","el","onClick","disabled","for","hidden","closeOnClickOutside","onGuxdismiss","name","Host","renderSelectDropdown","get","getElement","style","concat","Math","random","substr"],"sourceRoot":""}