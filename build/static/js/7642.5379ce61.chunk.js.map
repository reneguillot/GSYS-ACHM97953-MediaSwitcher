{"version":3,"file":"static/js/7642.5379ce61.chunk.js","mappings":"uNAIMA,EAAe,WACnB,SAAAA,EAAYC,IAASC,EAAAA,EAAAA,GAAA,KAAAF,IACnBG,EAAAA,EAAAA,GAAiBC,KAAMH,GACvBG,KAAKC,WAAQC,EACbF,KAAKG,cAAWD,EAChBF,KAAKI,UAAOF,EACZF,KAAKK,cAAWH,CAClB,CAkCI,OAlCHI,EAAAA,EAAAA,GAAAV,EAAA,EAAAW,IAAA,wBAAAN,MACD,WACOD,KAAKQ,uBAAuBC,aACnC,GACA,CAAAF,IAAA,eAAAN,MAKA,SAAaS,GACX,OAAKA,EAGEC,QAAQC,SAASZ,KAAKI,KAAKS,cAAcC,WAAWJ,EAAYG,gBAF9DF,QAAQC,SAAQ,EAG3B,GAAC,CAAAL,IAAA,uBAAAN,MACD,WACE,OAAOD,KAAKe,KAAKC,QAAQ,sBAC3B,GAAC,CAAAT,IAAA,oBAAAN,MACD,WACOD,KAAKI,OACRJ,KAAKI,KAAOJ,KAAKe,KAAKE,YAE1B,GAAC,CAAAV,IAAA,WAAAN,MACD,WACE,MAAO,CACLiB,SAAU,IAEd,GAAC,CAAAX,IAAA,mBAAAN,MACD,WAAmB,IAAAkB,EAAA,KACjB,OAAQC,EAAAA,EAAAA,GAAE,MAAO,CAAEC,MAAOrB,KAAKI,OAAQgB,EAAAA,EAAAA,GAAE,OAAQ,CAAEE,IAAK,SAAAC,GAAE,OAAKJ,EAAKK,YAAcD,CAAE,EAAGE,MAAO,CAAEC,QAAS,UAAYN,EAAAA,EAAAA,GAAE,OAAQ,OAAQpB,KAAKI,KAC9I,GAAC,CAAAG,IAAA,OAAAoB,IACD,WAAa,OAAOC,EAAAA,EAAAA,GAAW5B,KAAO,GAAC,CAAAO,IAAA,SAAAN,MAIvC,WAAW,OAAOmB,EAAAA,EAAAA,GAAES,EAAAA,EAAM7B,KAAK8B,WAAY9B,KAAK+B,mBAAqB,IAAC,EAAAxB,IAAA,WAAAoB,IAHtE,WAAwB,MAAO,CAC7B,SAAY,CAAC,yBACZ,KAAC/B,CAAA,CAzCe,GA4CrBA,EAAgB6B,MA9CK,mG","sources":["../node_modules/genesys-spark-components/dist/esm/gux-option-legacy.entry.js"],"sourcesContent":["import { r as registerInstance, h, g as getElement, H as Host } from './index-816e34d8.js';\n\nconst guxOptionCss = \"gux-option-legacy gux-text-highlight mark{font-weight:700;color:inherit;background-color:inherit}\";\n\nconst GuxOptionLegacy = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.value = undefined;\n    this.disabled = undefined;\n    this.text = undefined;\n    this.selected = undefined;\n  }\n  updateParentSelection() {\n    void this.getParentGuxDropdown().setSelected();\n  }\n  /**\n   * Determines if the search input matches this option.\n   *\n   * @param searchInput The input string being searched for.\n   */\n  shouldFilter(searchInput) {\n    if (!searchInput) {\n      return Promise.resolve(false);\n    }\n    return Promise.resolve(!this.text.toLowerCase().startsWith(searchInput.toLowerCase()));\n  }\n  getParentGuxDropdown() {\n    return this.root.closest('gux-dropdown-legacy');\n  }\n  componentWillLoad() {\n    if (!this.text) {\n      this.text = this.root.textContent;\n    }\n  }\n  hostData() {\n    return {\n      tabindex: '0'\n    };\n  }\n  __stencil_render() {\n    return (h(\"div\", { title: this.text }, h(\"span\", { ref: el => (this.slotContent = el), style: { display: 'none' } }, h(\"slot\", null)), this.text));\n  }\n  get root() { return getElement(this); }\n  static get watchers() { return {\n    \"selected\": [\"updateParentSelection\"]\n  }; }\n  render() { return h(Host, this.hostData(), this.__stencil_render()); }\n};\nGuxOptionLegacy.style = guxOptionCss;\n\nexport { GuxOptionLegacy as gux_option_legacy };\n"],"names":["GuxOptionLegacy","hostRef","_classCallCheck","registerInstance","this","value","undefined","disabled","text","selected","_createClass","key","getParentGuxDropdown","setSelected","searchInput","Promise","resolve","toLowerCase","startsWith","root","closest","textContent","tabindex","_this","h","title","ref","el","slotContent","style","display","get","getElement","Host","hostData","__stencil_render"],"sourceRoot":""}