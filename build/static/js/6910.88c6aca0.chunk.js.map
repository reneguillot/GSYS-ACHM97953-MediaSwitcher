{"version":3,"file":"static/js/6910.88c6aca0.chunk.js","mappings":"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","sources":["../node_modules/genesys-spark-components/dist/esm/gux-form-field-text-like.entry.js"],"sourcesContent":["import { r as registerInstance, f as forceUpdate, h, g as getElement } from './index-816e34d8.js';\nimport { c as calculateInputDisabledState, o as onInputDisabledStateChange } from './on-input-disabled-state-change-3ea76372.js';\nimport { O as OnMutation } from './on-mutation-9b53a0da.js';\nimport { o as onRequiredChange } from './on-attribute-change-5fd8da7c.js';\nimport { p as preventBrowserValidationStyling } from './prevent-browser-validation-styling-d16c3f4c.js';\nimport { h as hasSlot } from './has-slot-062ae63a.js';\nimport { h as hasContent, c as setSlotAriaDescribedby, d as clearInput, G as GuxFormFieldError, a as GuxFormFieldHelp, g as getSlottedInput, v as validateFormIds, b as getComputedLabelPosition } from './gux-form-field.service-57a80f91.js';\nimport { G as GuxFormFieldLabel, a as GuxFormFieldContainer } from './gux-form-field-container-40484056.js';\nimport { t as trackComponent } from './usage-f636627a.js';\nimport './random-html-id-8e3f658c.js';\nimport './log-error-e0bbd04a.js';\nimport './set-input-value-5adeaccc.js';\nimport './simulate-native-event-ac69961f.js';\n\nconst guxFormFieldTextLikeCss = \".gux-form-field-container{margin:var(--gux-form-field-container-margin-top, 16px) 0 var(--gux-form-field-container-margin-bottom, 16px) 0}.gux-form-field-container.gux-beside{display:flex;flex-direction:row}.gux-form-field-error{display:none;flex-direction:row;flex-wrap:nowrap;align-content:stretch;align-items:flex-start;justify-content:flex-start;margin:4px 0;font-size:12px;line-height:20px;color:#2e394c}.gux-form-field-error.gux-show{display:flex}.gux-form-field-error gux-icon{flex:0 1 auto;align-self:auto;order:0;min-width:16px;min-height:16px;margin:2px 4px 0 0;color:#ea0b0b}.gux-form-field-error .gux-message{flex:0 1 auto;align-self:auto;order:0}.gux-form-field-label.gux-required::after{font-size:12px;color:#ea0b0b;content:' *'}.gux-form-field-label.gux-beside{position:relative;top:8px;width:fit-content;min-width:45px;margin-right:8px}.gux-form-field-label.gux-above{margin-bottom:8px}.gux-form-field-label.gux-screenreader{position:absolute;top:auto;left:-10000px;width:1px;height:1px;overflow:hidden}.gux-form-field-help{display:none;flex-direction:row;flex-wrap:nowrap;align-content:stretch;align-items:flex-start;justify-content:flex-start;margin:4px 0;font-size:12px;font-weight:400;line-height:20px;color:#6b7585}.gux-form-field-help.gux-show{display:flex}.gux-form-field-help .gux-message{flex:0 1 auto;align-self:none;order:0}:host{display:block;color:#2e394c}::slotted(label){font-family:Roboto, sans-serif;font-weight:400;font-weight:700;font-size:12px;line-height:16px}::slotted(input){flex:1 1 auto;align-self:auto;order:0;width:100%;overflow:hidden;font-size:12px;color:#2e394c;text-overflow:ellipsis;background-color:#f6f7f9;border:none;outline:none}::slotted(input)::placeholder{color:#596373;opacity:1}slot[name='prefix'],slot[name='suffix']{color:#2e394c;white-space:nowrap}.gux-input-and-error-container{flex-grow:1}.gux-input-and-error-container .gux-input .gux-input-container{box-sizing:border-box;display:flex;flex-direction:row;flex-wrap:nowrap;align-content:stretch;align-items:center;justify-content:center;width:100%;height:32px;padding:4px 8px 4px 12px;font-family:inherit;font-size:12px;line-height:1.6667;color:#2e394c;background-color:#f6f7f9;background-image:none;border:1px solid #6b7585;border-radius:4px;box-shadow:inset 0 0 4px rgba(32, 41, 55, 0.16)}.gux-input-and-error-container .gux-input .gux-input-container.gux-has-suffix:not(.gux-input-and-error-container .gux-input .gux-input-container.gux-has-prefix) ::slotted(input){text-align:right}.gux-input-and-error-container .gux-input .gux-input-container.gux-disabled{opacity:0.5}.gux-input-and-error-container .gux-input .gux-input-container:focus-within{border-color:#2a60c8;outline:3px solid #aac9ff;outline-offset:1px;box-shadow:0 0 0 1px #fdfdfd}.gux-input-and-error-container .gux-input.gux-input-error .gux-input-container{border-color:#ea0b0b}\";\n\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\")\n    r = Reflect.decorate(decorators, target, key, desc);\n  else\n    for (var i = decorators.length - 1; i >= 0; i--)\n      if (d = decorators[i])\n        r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nconst GuxFormFieldTextLike = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.clearable = undefined;\n    this.labelPosition = undefined;\n    this.hasPrefix = undefined;\n    this.hasSuffix = undefined;\n    this.computedLabelPosition = 'above';\n    this.disabled = undefined;\n    this.required = undefined;\n    this.hasContent = false;\n    this.hasError = false;\n    this.hasHelp = false;\n  }\n  onMutation() {\n    this.hasError = hasSlot(this.root, 'error');\n    this.hasHelp = hasSlot(this.root, 'help');\n  }\n  // eslint-disable-next-line @typescript-eslint/require-await\n  async guxForceUpdate() {\n    this.hasContent = hasContent(this.input);\n    this.hasError = hasSlot(this.root, 'error');\n    this.hasHelp = hasSlot(this.root, 'help');\n    forceUpdate(this.root);\n  }\n  componentWillLoad() {\n    this.setInput();\n    this.setLabel();\n    this.hasError = hasSlot(this.root, 'error');\n    this.hasHelp = hasSlot(this.root, 'help');\n    this.hasPrefix = Boolean(this.root.querySelector('[slot=\"prefix\"]'));\n    this.hasSuffix = Boolean(this.root.querySelector('[slot=\"suffix\"]'));\n    if (this.hasPrefix) {\n      setSlotAriaDescribedby(this.root, this.input, 'prefix');\n    }\n    if (this.hasSuffix) {\n      setSlotAriaDescribedby(this.root, this.input, 'suffix');\n    }\n    trackComponent(this.root, { variant: this.variant });\n  }\n  disconnectedCallback() {\n    if (this.disabledObserver) {\n      this.disabledObserver.disconnect();\n    }\n    if (this.requiredObserver) {\n      this.requiredObserver.disconnect();\n    }\n  }\n  render() {\n    return (h(GuxFormFieldContainer, { labelPosition: this.computedLabelPosition }, h(GuxFormFieldLabel, { position: this.computedLabelPosition, required: this.required }, h(\"slot\", { name: \"label\", onSlotchange: () => this.setLabel() })), h(\"div\", { class: \"gux-input-and-error-container\" }, h(\"div\", { class: {\n        'gux-input': true,\n        'gux-input-error': this.hasError\n      } }, h(\"div\", { class: {\n        'gux-input-container': true,\n        'gux-disabled': this.disabled,\n        'gux-has-prefix': this.hasPrefix,\n        'gux-has-suffix': this.hasSuffix\n      } }, h(\"slot\", { name: \"prefix\" }), h(\"slot\", { name: \"input\" }), h(\"slot\", { name: \"suffix\" }), this.clearable && this.hasContent && !this.disabled && (h(\"gux-form-field-input-clear-button\", { onClick: () => clearInput(this.input) })))), h(GuxFormFieldError, { show: this.hasError }, h(\"slot\", { name: \"error\" })), h(GuxFormFieldHelp, { show: !this.hasError && this.hasHelp }, h(\"slot\", { name: \"help\" })))));\n  }\n  get variant() {\n    const labelPositionVariant = this.labelPosition\n      ? this.labelPosition.toLowerCase()\n      : 'none';\n    const typeVariant = this.input.getAttribute('type');\n    const clearableVariant = this.clearable ? 'clearable' : 'unclearable';\n    return `${typeVariant}-${clearableVariant}-${labelPositionVariant}`;\n  }\n  setInput() {\n    this.input = getSlottedInput(this.root, 'input[type=\"email\"][slot=\"input\"], input[type=\"number\"][slot=\"input\"], input[type=\"password\"][slot=\"input\"], input[type=\"text\"][slot=\"input\"]');\n    this.hasContent = hasContent(this.input);\n    preventBrowserValidationStyling(this.input);\n    this.input.addEventListener('input', () => {\n      this.hasContent = hasContent(this.input);\n    });\n    this.disabled = calculateInputDisabledState(this.input);\n    this.required = this.input.required;\n    this.disabledObserver = onInputDisabledStateChange(this.input, (disabled) => {\n      this.disabled = disabled;\n    });\n    this.requiredObserver = onRequiredChange(this.input, (required) => {\n      this.required = required;\n    });\n    validateFormIds(this.root, this.input);\n  }\n  setLabel() {\n    this.label = this.root.querySelector('label[slot=\"label\"]');\n    this.computedLabelPosition = getComputedLabelPosition(this.label, this.labelPosition);\n  }\n  get root() { return getElement(this); }\n};\n__decorate([\n  OnMutation({ childList: true, subtree: true })\n], GuxFormFieldTextLike.prototype, \"onMutation\", null);\nGuxFormFieldTextLike.style = guxFormFieldTextLikeCss;\n\nexport { GuxFormFieldTextLike as gux_form_field_text_like };\n"],"names":["__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","GuxFormFieldTextLike","hostRef","_classCallCheck","registerInstance","this","clearable","undefined","labelPosition","hasPrefix","hasSuffix","computedLabelPosition","disabled","required","hasContent","hasError","hasHelp","_createClass","value","hasSlot","root","_guxForceUpdate","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","input","forceUpdate","stop","apply","setInput","setLabel","Boolean","querySelector","setSlotAriaDescribedby","trackComponent","variant","disabledObserver","disconnect","requiredObserver","_this","h","GuxFormFieldContainer","GuxFormFieldLabel","position","name","onSlotchange","class","onClick","clearInput","GuxFormFieldError","show","GuxFormFieldHelp","get","labelPositionVariant","toLowerCase","typeVariant","getAttribute","clearableVariant","concat","_this2","getSlottedInput","preventBrowserValidationStyling","addEventListener","calculateInputDisabledState","onInputDisabledStateChange","onRequiredChange","validateFormIds","label","getComputedLabelPosition","getElement","OnMutation","childList","subtree","prototype","style"],"sourceRoot":""}